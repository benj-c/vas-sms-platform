/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "maxY": 9887.0, "series": [{"data": [[0.0, 4350.0], [0.1, 4350.0], [0.2, 4350.0], [0.3, 4350.0], [0.4, 4350.0], [0.5, 4350.0], [0.6, 4350.0], [0.7, 4350.0], [0.8, 4350.0], [0.9, 4350.0], [1.0, 4554.0], [1.1, 4554.0], [1.2, 4554.0], [1.3, 4554.0], [1.4, 4554.0], [1.5, 4554.0], [1.6, 4554.0], [1.7, 4554.0], [1.8, 4554.0], [1.9, 4554.0], [2.0, 4624.0], [2.1, 4624.0], [2.2, 4624.0], [2.3, 4624.0], [2.4, 4624.0], [2.5, 4624.0], [2.6, 4624.0], [2.7, 4624.0], [2.8, 4624.0], [2.9, 4624.0], [3.0, 4666.0], [3.1, 4666.0], [3.2, 4666.0], [3.3, 4666.0], [3.4, 4666.0], [3.5, 4666.0], [3.6, 4666.0], [3.7, 4666.0], [3.8, 4666.0], [3.9, 4666.0], [4.0, 4670.0], [4.1, 4670.0], [4.2, 4670.0], [4.3, 4670.0], [4.4, 4670.0], [4.5, 4670.0], [4.6, 4670.0], [4.7, 4670.0], [4.8, 4670.0], [4.9, 4670.0], [5.0, 4682.0], [5.1, 4682.0], [5.2, 4682.0], [5.3, 4682.0], [5.4, 4682.0], [5.5, 4682.0], [5.6, 4682.0], [5.7, 4682.0], [5.8, 4682.0], [5.9, 4682.0], [6.0, 4702.0], [6.1, 4702.0], [6.2, 4702.0], [6.3, 4702.0], [6.4, 4702.0], [6.5, 4702.0], [6.6, 4702.0], [6.7, 4702.0], [6.8, 4702.0], [6.9, 4702.0], [7.0, 4708.0], [7.1, 4708.0], [7.2, 4708.0], [7.3, 4708.0], [7.4, 4708.0], [7.5, 4708.0], [7.6, 4708.0], [7.7, 4708.0], [7.8, 4708.0], [7.9, 4708.0], [8.0, 4721.0], [8.1, 4721.0], [8.2, 4721.0], [8.3, 4721.0], [8.4, 4721.0], [8.5, 4721.0], [8.6, 4721.0], [8.7, 4721.0], [8.8, 4721.0], [8.9, 4721.0], [9.0, 4736.0], [9.1, 4736.0], [9.2, 4736.0], [9.3, 4736.0], [9.4, 4736.0], [9.5, 4736.0], [9.6, 4736.0], [9.7, 4736.0], [9.8, 4736.0], [9.9, 4736.0], [10.0, 4745.0], [10.1, 4745.0], [10.2, 4745.0], [10.3, 4745.0], [10.4, 4745.0], [10.5, 4745.0], [10.6, 4745.0], [10.7, 4745.0], [10.8, 4745.0], [10.9, 4745.0], [11.0, 4879.0], [11.1, 4879.0], [11.2, 4879.0], [11.3, 4879.0], [11.4, 4879.0], [11.5, 4879.0], [11.6, 4879.0], [11.7, 4879.0], [11.8, 4879.0], [11.9, 4879.0], [12.0, 4959.0], [12.1, 4959.0], [12.2, 4959.0], [12.3, 4959.0], [12.4, 4959.0], [12.5, 4959.0], [12.6, 4959.0], [12.7, 4959.0], [12.8, 4959.0], [12.9, 4959.0], [13.0, 5030.0], [13.1, 5030.0], [13.2, 5030.0], [13.3, 5030.0], [13.4, 5030.0], [13.5, 5030.0], [13.6, 5030.0], [13.7, 5030.0], [13.8, 5030.0], [13.9, 5030.0], [14.0, 5099.0], [14.1, 5099.0], [14.2, 5099.0], [14.3, 5099.0], [14.4, 5099.0], [14.5, 5099.0], [14.6, 5099.0], [14.7, 5099.0], [14.8, 5099.0], [14.9, 5099.0], [15.0, 5144.0], [15.1, 5144.0], [15.2, 5144.0], [15.3, 5144.0], [15.4, 5144.0], [15.5, 5144.0], [15.6, 5144.0], [15.7, 5144.0], [15.8, 5144.0], [15.9, 5144.0], [16.0, 5180.0], [16.1, 5180.0], [16.2, 5180.0], [16.3, 5180.0], [16.4, 5180.0], [16.5, 5180.0], [16.6, 5180.0], [16.7, 5180.0], [16.8, 5180.0], [16.9, 5180.0], [17.0, 5186.0], [17.1, 5186.0], [17.2, 5186.0], [17.3, 5186.0], [17.4, 5186.0], [17.5, 5186.0], [17.6, 5186.0], [17.7, 5186.0], [17.8, 5186.0], [17.9, 5186.0], [18.0, 5268.0], [18.1, 5268.0], [18.2, 5268.0], [18.3, 5268.0], [18.4, 5268.0], [18.5, 5268.0], [18.6, 5268.0], [18.7, 5268.0], [18.8, 5268.0], [18.9, 5268.0], [19.0, 5366.0], [19.1, 5366.0], [19.2, 5366.0], [19.3, 5366.0], [19.4, 5366.0], [19.5, 5366.0], [19.6, 5366.0], [19.7, 5366.0], [19.8, 5366.0], [19.9, 5366.0], [20.0, 5383.0], [20.1, 5383.0], [20.2, 5383.0], [20.3, 5383.0], [20.4, 5383.0], [20.5, 5383.0], [20.6, 5383.0], [20.7, 5383.0], [20.8, 5383.0], [20.9, 5383.0], [21.0, 5422.0], [21.1, 5422.0], [21.2, 5422.0], [21.3, 5422.0], [21.4, 5422.0], [21.5, 5422.0], [21.6, 5422.0], [21.7, 5422.0], [21.8, 5422.0], [21.9, 5422.0], [22.0, 5437.0], [22.1, 5437.0], [22.2, 5437.0], [22.3, 5437.0], [22.4, 5437.0], [22.5, 5437.0], [22.6, 5437.0], [22.7, 5437.0], [22.8, 5437.0], [22.9, 5437.0], [23.0, 5475.0], [23.1, 5475.0], [23.2, 5475.0], [23.3, 5475.0], [23.4, 5475.0], [23.5, 5475.0], [23.6, 5475.0], [23.7, 5475.0], [23.8, 5475.0], [23.9, 5475.0], [24.0, 5526.0], [24.1, 5526.0], [24.2, 5526.0], [24.3, 5526.0], [24.4, 5526.0], [24.5, 5526.0], [24.6, 5526.0], [24.7, 5526.0], [24.8, 5526.0], [24.9, 5526.0], [25.0, 5624.0], [25.1, 5624.0], [25.2, 5624.0], [25.3, 5624.0], [25.4, 5624.0], [25.5, 5624.0], [25.6, 5624.0], [25.7, 5624.0], [25.8, 5624.0], [25.9, 5624.0], [26.0, 5631.0], [26.1, 5631.0], [26.2, 5631.0], [26.3, 5631.0], [26.4, 5631.0], [26.5, 5631.0], [26.6, 5631.0], [26.7, 5631.0], [26.8, 5631.0], [26.9, 5631.0], [27.0, 5632.0], [27.1, 5632.0], [27.2, 5632.0], [27.3, 5632.0], [27.4, 5632.0], [27.5, 5632.0], [27.6, 5632.0], [27.7, 5632.0], [27.8, 5632.0], [27.9, 5632.0], [28.0, 5637.0], [28.1, 5637.0], [28.2, 5637.0], [28.3, 5637.0], [28.4, 5637.0], [28.5, 5637.0], [28.6, 5637.0], [28.7, 5637.0], [28.8, 5637.0], [28.9, 5637.0], [29.0, 5736.0], [29.1, 5736.0], [29.2, 5736.0], [29.3, 5736.0], [29.4, 5736.0], [29.5, 5736.0], [29.6, 5736.0], [29.7, 5736.0], [29.8, 5736.0], [29.9, 5736.0], [30.0, 5773.0], [30.1, 5773.0], [30.2, 5773.0], [30.3, 5773.0], [30.4, 5773.0], [30.5, 5773.0], [30.6, 5773.0], [30.7, 5773.0], [30.8, 5773.0], [30.9, 5773.0], [31.0, 5781.0], [31.1, 5781.0], [31.2, 5781.0], [31.3, 5781.0], [31.4, 5781.0], [31.5, 5781.0], [31.6, 5781.0], [31.7, 5781.0], [31.8, 5781.0], [31.9, 5781.0], [32.0, 5789.0], [32.1, 5789.0], [32.2, 5789.0], [32.3, 5789.0], [32.4, 5789.0], [32.5, 5789.0], [32.6, 5789.0], [32.7, 5789.0], [32.8, 5789.0], [32.9, 5789.0], [33.0, 5806.0], [33.1, 5806.0], [33.2, 5806.0], [33.3, 5806.0], [33.4, 5806.0], [33.5, 5806.0], [33.6, 5806.0], [33.7, 5806.0], [33.8, 5806.0], [33.9, 5806.0], [34.0, 5810.0], [34.1, 5810.0], [34.2, 5810.0], [34.3, 5810.0], [34.4, 5810.0], [34.5, 5810.0], [34.6, 5810.0], [34.7, 5810.0], [34.8, 5810.0], [34.9, 5810.0], [35.0, 5867.0], [35.1, 5867.0], [35.2, 5867.0], [35.3, 5867.0], [35.4, 5867.0], [35.5, 5867.0], [35.6, 5867.0], [35.7, 5867.0], [35.8, 5867.0], [35.9, 5867.0], [36.0, 5867.0], [36.1, 5867.0], [36.2, 5867.0], [36.3, 5867.0], [36.4, 5867.0], [36.5, 5867.0], [36.6, 5867.0], [36.7, 5867.0], [36.8, 5867.0], [36.9, 5867.0], [37.0, 5882.0], [37.1, 5882.0], [37.2, 5882.0], [37.3, 5882.0], [37.4, 5882.0], [37.5, 5882.0], [37.6, 5882.0], [37.7, 5882.0], [37.8, 5882.0], [37.9, 5882.0], [38.0, 5885.0], [38.1, 5885.0], [38.2, 5885.0], [38.3, 5885.0], [38.4, 5885.0], [38.5, 5885.0], [38.6, 5885.0], [38.7, 5885.0], [38.8, 5885.0], [38.9, 5885.0], [39.0, 5991.0], [39.1, 5991.0], [39.2, 5991.0], [39.3, 5991.0], [39.4, 5991.0], [39.5, 5991.0], [39.6, 5991.0], [39.7, 5991.0], [39.8, 5991.0], [39.9, 5991.0], [40.0, 6008.0], [40.1, 6008.0], [40.2, 6008.0], [40.3, 6008.0], [40.4, 6008.0], [40.5, 6008.0], [40.6, 6008.0], [40.7, 6008.0], [40.8, 6008.0], [40.9, 6008.0], [41.0, 6028.0], [41.1, 6028.0], [41.2, 6028.0], [41.3, 6028.0], [41.4, 6028.0], [41.5, 6028.0], [41.6, 6028.0], [41.7, 6028.0], [41.8, 6028.0], [41.9, 6028.0], [42.0, 6034.0], [42.1, 6034.0], [42.2, 6034.0], [42.3, 6034.0], [42.4, 6034.0], [42.5, 6034.0], [42.6, 6034.0], [42.7, 6034.0], [42.8, 6034.0], [42.9, 6034.0], [43.0, 6087.0], [43.1, 6087.0], [43.2, 6087.0], [43.3, 6087.0], [43.4, 6087.0], [43.5, 6087.0], [43.6, 6087.0], [43.7, 6087.0], [43.8, 6087.0], [43.9, 6087.0], [44.0, 6088.0], [44.1, 6088.0], [44.2, 6088.0], [44.3, 6088.0], [44.4, 6088.0], [44.5, 6088.0], [44.6, 6088.0], [44.7, 6088.0], [44.8, 6088.0], [44.9, 6088.0], [45.0, 6124.0], [45.1, 6124.0], [45.2, 6124.0], [45.3, 6124.0], [45.4, 6124.0], [45.5, 6124.0], [45.6, 6124.0], [45.7, 6124.0], [45.8, 6124.0], [45.9, 6124.0], [46.0, 6125.0], [46.1, 6125.0], [46.2, 6125.0], [46.3, 6125.0], [46.4, 6125.0], [46.5, 6125.0], [46.6, 6125.0], [46.7, 6125.0], [46.8, 6125.0], [46.9, 6125.0], [47.0, 6127.0], [47.1, 6127.0], [47.2, 6127.0], [47.3, 6127.0], [47.4, 6127.0], [47.5, 6127.0], [47.6, 6127.0], [47.7, 6127.0], [47.8, 6127.0], [47.9, 6127.0], [48.0, 6154.0], [48.1, 6154.0], [48.2, 6154.0], [48.3, 6154.0], [48.4, 6154.0], [48.5, 6154.0], [48.6, 6154.0], [48.7, 6154.0], [48.8, 6154.0], [48.9, 6154.0], [49.0, 6207.0], [49.1, 6207.0], [49.2, 6207.0], [49.3, 6207.0], [49.4, 6207.0], [49.5, 6207.0], [49.6, 6207.0], [49.7, 6207.0], [49.8, 6207.0], [49.9, 6207.0], [50.0, 6237.0], [50.1, 6237.0], [50.2, 6237.0], [50.3, 6237.0], [50.4, 6237.0], [50.5, 6237.0], [50.6, 6237.0], [50.7, 6237.0], [50.8, 6237.0], [50.9, 6237.0], [51.0, 6310.0], [51.1, 6310.0], [51.2, 6310.0], [51.3, 6310.0], [51.4, 6310.0], [51.5, 6310.0], [51.6, 6310.0], [51.7, 6310.0], [51.8, 6310.0], [51.9, 6310.0], [52.0, 6376.0], [52.1, 6376.0], [52.2, 6376.0], [52.3, 6376.0], [52.4, 6376.0], [52.5, 6376.0], [52.6, 6376.0], [52.7, 6376.0], [52.8, 6376.0], [52.9, 6376.0], [53.0, 6382.0], [53.1, 6382.0], [53.2, 6382.0], [53.3, 6382.0], [53.4, 6382.0], [53.5, 6382.0], [53.6, 6382.0], [53.7, 6382.0], [53.8, 6382.0], [53.9, 6382.0], [54.0, 6474.0], [54.1, 6474.0], [54.2, 6474.0], [54.3, 6474.0], [54.4, 6474.0], [54.5, 6474.0], [54.6, 6474.0], [54.7, 6474.0], [54.8, 6474.0], [54.9, 6474.0], [55.0, 6499.0], [55.1, 6499.0], [55.2, 6499.0], [55.3, 6499.0], [55.4, 6499.0], [55.5, 6499.0], [55.6, 6499.0], [55.7, 6499.0], [55.8, 6499.0], [55.9, 6499.0], [56.0, 6566.0], [56.1, 6566.0], [56.2, 6566.0], [56.3, 6566.0], [56.4, 6566.0], [56.5, 6566.0], [56.6, 6566.0], [56.7, 6566.0], [56.8, 6566.0], [56.9, 6566.0], [57.0, 6602.0], [57.1, 6602.0], [57.2, 6602.0], [57.3, 6602.0], [57.4, 6602.0], [57.5, 6602.0], [57.6, 6602.0], [57.7, 6602.0], [57.8, 6602.0], [57.9, 6602.0], [58.0, 6647.0], [58.1, 6647.0], [58.2, 6647.0], [58.3, 6647.0], [58.4, 6647.0], [58.5, 6647.0], [58.6, 6647.0], [58.7, 6647.0], [58.8, 6647.0], [58.9, 6647.0], [59.0, 6747.0], [59.1, 6747.0], [59.2, 6747.0], [59.3, 6747.0], [59.4, 6747.0], [59.5, 6747.0], [59.6, 6747.0], [59.7, 6747.0], [59.8, 6747.0], [59.9, 6747.0], [60.0, 6841.0], [60.1, 6841.0], [60.2, 6841.0], [60.3, 6841.0], [60.4, 6841.0], [60.5, 6841.0], [60.6, 6841.0], [60.7, 6841.0], [60.8, 6841.0], [60.9, 6841.0], [61.0, 6851.0], [61.1, 6851.0], [61.2, 6851.0], [61.3, 6851.0], [61.4, 6851.0], [61.5, 6851.0], [61.6, 6851.0], [61.7, 6851.0], [61.8, 6851.0], [61.9, 6851.0], [62.0, 6879.0], [62.1, 6879.0], [62.2, 6879.0], [62.3, 6879.0], [62.4, 6879.0], [62.5, 6879.0], [62.6, 6879.0], [62.7, 6879.0], [62.8, 6879.0], [62.9, 6879.0], [63.0, 6920.0], [63.1, 6920.0], [63.2, 6920.0], [63.3, 6920.0], [63.4, 6920.0], [63.5, 6920.0], [63.6, 6920.0], [63.7, 6920.0], [63.8, 6920.0], [63.9, 6920.0], [64.0, 6973.0], [64.1, 6973.0], [64.2, 6973.0], [64.3, 6973.0], [64.4, 6973.0], [64.5, 6973.0], [64.6, 6973.0], [64.7, 6973.0], [64.8, 6973.0], [64.9, 6973.0], [65.0, 7095.0], [65.1, 7095.0], [65.2, 7095.0], [65.3, 7095.0], [65.4, 7095.0], [65.5, 7095.0], [65.6, 7095.0], [65.7, 7095.0], [65.8, 7095.0], [65.9, 7095.0], [66.0, 7098.0], [66.1, 7098.0], [66.2, 7098.0], [66.3, 7098.0], [66.4, 7098.0], [66.5, 7098.0], [66.6, 7098.0], [66.7, 7098.0], [66.8, 7098.0], [66.9, 7098.0], [67.0, 7154.0], [67.1, 7154.0], [67.2, 7154.0], [67.3, 7154.0], [67.4, 7154.0], [67.5, 7154.0], [67.6, 7154.0], [67.7, 7154.0], [67.8, 7154.0], [67.9, 7154.0], [68.0, 7176.0], [68.1, 7176.0], [68.2, 7176.0], [68.3, 7176.0], [68.4, 7176.0], [68.5, 7176.0], [68.6, 7176.0], [68.7, 7176.0], [68.8, 7176.0], [68.9, 7176.0], [69.0, 7366.0], [69.1, 7366.0], [69.2, 7366.0], [69.3, 7366.0], [69.4, 7366.0], [69.5, 7366.0], [69.6, 7366.0], [69.7, 7366.0], [69.8, 7366.0], [69.9, 7366.0], [70.0, 7372.0], [70.1, 7372.0], [70.2, 7372.0], [70.3, 7372.0], [70.4, 7372.0], [70.5, 7372.0], [70.6, 7372.0], [70.7, 7372.0], [70.8, 7372.0], [70.9, 7372.0], [71.0, 7448.0], [71.1, 7448.0], [71.2, 7448.0], [71.3, 7448.0], [71.4, 7448.0], [71.5, 7448.0], [71.6, 7448.0], [71.7, 7448.0], [71.8, 7448.0], [71.9, 7448.0], [72.0, 7458.0], [72.1, 7458.0], [72.2, 7458.0], [72.3, 7458.0], [72.4, 7458.0], [72.5, 7458.0], [72.6, 7458.0], [72.7, 7458.0], [72.8, 7458.0], [72.9, 7458.0], [73.0, 7463.0], [73.1, 7463.0], [73.2, 7463.0], [73.3, 7463.0], [73.4, 7463.0], [73.5, 7463.0], [73.6, 7463.0], [73.7, 7463.0], [73.8, 7463.0], [73.9, 7463.0], [74.0, 7524.0], [74.1, 7524.0], [74.2, 7524.0], [74.3, 7524.0], [74.4, 7524.0], [74.5, 7524.0], [74.6, 7524.0], [74.7, 7524.0], [74.8, 7524.0], [74.9, 7524.0], [75.0, 7557.0], [75.1, 7557.0], [75.2, 7557.0], [75.3, 7557.0], [75.4, 7557.0], [75.5, 7557.0], [75.6, 7557.0], [75.7, 7557.0], [75.8, 7557.0], [75.9, 7557.0], [76.0, 7558.0], [76.1, 7558.0], [76.2, 7558.0], [76.3, 7558.0], [76.4, 7558.0], [76.5, 7558.0], [76.6, 7558.0], [76.7, 7558.0], [76.8, 7558.0], [76.9, 7558.0], [77.0, 7785.0], [77.1, 7785.0], [77.2, 7785.0], [77.3, 7785.0], [77.4, 7785.0], [77.5, 7785.0], [77.6, 7785.0], [77.7, 7785.0], [77.8, 7785.0], [77.9, 7785.0], [78.0, 7813.0], [78.1, 7813.0], [78.2, 7813.0], [78.3, 7813.0], [78.4, 7813.0], [78.5, 7813.0], [78.6, 7813.0], [78.7, 7813.0], [78.8, 7813.0], [78.9, 7813.0], [79.0, 7839.0], [79.1, 7839.0], [79.2, 7839.0], [79.3, 7839.0], [79.4, 7839.0], [79.5, 7839.0], [79.6, 7839.0], [79.7, 7839.0], [79.8, 7839.0], [79.9, 7839.0], [80.0, 7865.0], [80.1, 7865.0], [80.2, 7865.0], [80.3, 7865.0], [80.4, 7865.0], [80.5, 7865.0], [80.6, 7865.0], [80.7, 7865.0], [80.8, 7865.0], [80.9, 7865.0], [81.0, 7949.0], [81.1, 7949.0], [81.2, 7949.0], [81.3, 7949.0], [81.4, 7949.0], [81.5, 7949.0], [81.6, 7949.0], [81.7, 7949.0], [81.8, 7949.0], [81.9, 7949.0], [82.0, 7990.0], [82.1, 7990.0], [82.2, 7990.0], [82.3, 7990.0], [82.4, 7990.0], [82.5, 7990.0], [82.6, 7990.0], [82.7, 7990.0], [82.8, 7990.0], [82.9, 7990.0], [83.0, 7991.0], [83.1, 7991.0], [83.2, 7991.0], [83.3, 7991.0], [83.4, 7991.0], [83.5, 7991.0], [83.6, 7991.0], [83.7, 7991.0], [83.8, 7991.0], [83.9, 7991.0], [84.0, 8007.0], [84.1, 8007.0], [84.2, 8007.0], [84.3, 8007.0], [84.4, 8007.0], [84.5, 8007.0], [84.6, 8007.0], [84.7, 8007.0], [84.8, 8007.0], [84.9, 8007.0], [85.0, 8181.0], [85.1, 8181.0], [85.2, 8181.0], [85.3, 8181.0], [85.4, 8181.0], [85.5, 8181.0], [85.6, 8181.0], [85.7, 8181.0], [85.8, 8181.0], [85.9, 8181.0], [86.0, 8279.0], [86.1, 8279.0], [86.2, 8279.0], [86.3, 8279.0], [86.4, 8279.0], [86.5, 8279.0], [86.6, 8279.0], [86.7, 8279.0], [86.8, 8279.0], [86.9, 8279.0], [87.0, 8347.0], [87.1, 8347.0], [87.2, 8347.0], [87.3, 8347.0], [87.4, 8347.0], [87.5, 8347.0], [87.6, 8347.0], [87.7, 8347.0], [87.8, 8347.0], [87.9, 8347.0], [88.0, 8360.0], [88.1, 8360.0], [88.2, 8360.0], [88.3, 8360.0], [88.4, 8360.0], [88.5, 8360.0], [88.6, 8360.0], [88.7, 8360.0], [88.8, 8360.0], [88.9, 8360.0], [89.0, 8375.0], [89.1, 8375.0], [89.2, 8375.0], [89.3, 8375.0], [89.4, 8375.0], [89.5, 8375.0], [89.6, 8375.0], [89.7, 8375.0], [89.8, 8375.0], [89.9, 8375.0], [90.0, 8506.0], [90.1, 8506.0], [90.2, 8506.0], [90.3, 8506.0], [90.4, 8506.0], [90.5, 8506.0], [90.6, 8506.0], [90.7, 8506.0], [90.8, 8506.0], [90.9, 8506.0], [91.0, 8643.0], [91.1, 8643.0], [91.2, 8643.0], [91.3, 8643.0], [91.4, 8643.0], [91.5, 8643.0], [91.6, 8643.0], [91.7, 8643.0], [91.8, 8643.0], [91.9, 8643.0], [92.0, 8695.0], [92.1, 8695.0], [92.2, 8695.0], [92.3, 8695.0], [92.4, 8695.0], [92.5, 8695.0], [92.6, 8695.0], [92.7, 8695.0], [92.8, 8695.0], [92.9, 8695.0], [93.0, 8890.0], [93.1, 8890.0], [93.2, 8890.0], [93.3, 8890.0], [93.4, 8890.0], [93.5, 8890.0], [93.6, 8890.0], [93.7, 8890.0], [93.8, 8890.0], [93.9, 8890.0], [94.0, 9192.0], [94.1, 9192.0], [94.2, 9192.0], [94.3, 9192.0], [94.4, 9192.0], [94.5, 9192.0], [94.6, 9192.0], [94.7, 9192.0], [94.8, 9192.0], [94.9, 9192.0], [95.0, 9413.0], [95.1, 9413.0], [95.2, 9413.0], [95.3, 9413.0], [95.4, 9413.0], [95.5, 9413.0], [95.6, 9413.0], [95.7, 9413.0], [95.8, 9413.0], [95.9, 9413.0], [96.0, 9599.0], [96.1, 9599.0], [96.2, 9599.0], [96.3, 9599.0], [96.4, 9599.0], [96.5, 9599.0], [96.6, 9599.0], [96.7, 9599.0], [96.8, 9599.0], [96.9, 9599.0], [97.0, 9835.0], [97.1, 9835.0], [97.2, 9835.0], [97.3, 9835.0], [97.4, 9835.0], [97.5, 9835.0], [97.6, 9835.0], [97.7, 9835.0], [97.8, 9835.0], [97.9, 9835.0], [98.0, 9838.0], [98.1, 9838.0], [98.2, 9838.0], [98.3, 9838.0], [98.4, 9838.0], [98.5, 9838.0], [98.6, 9838.0], [98.7, 9838.0], [98.8, 9838.0], [98.9, 9838.0], [99.0, 9887.0], [99.1, 9887.0], [99.2, 9887.0], [99.3, 9887.0], [99.4, 9887.0], [99.5, 9887.0], [99.6, 9887.0], [99.7, 9887.0], [99.8, 9887.0], [99.9, 9887.0]], "isOverall": false, "label": "authenticate", "isController": false}, {"data": [[0.0, 15.0], [0.1, 15.0], [0.2, 15.0], [0.3, 15.0], [0.4, 15.0], [0.5, 15.0], [0.6, 15.0], [0.7, 15.0], [0.8, 15.0], [0.9, 15.0], [1.0, 16.0], [1.1, 16.0], [1.2, 16.0], [1.3, 16.0], [1.4, 16.0], [1.5, 16.0], [1.6, 16.0], [1.7, 16.0], [1.8, 16.0], [1.9, 16.0], [2.0, 17.0], [2.1, 17.0], [2.2, 17.0], [2.3, 17.0], [2.4, 17.0], [2.5, 17.0], [2.6, 17.0], [2.7, 17.0], [2.8, 17.0], [2.9, 17.0], [3.0, 17.0], [3.1, 17.0], [3.2, 17.0], [3.3, 17.0], [3.4, 17.0], [3.5, 17.0], [3.6, 17.0], [3.7, 17.0], [3.8, 17.0], [3.9, 17.0], [4.0, 17.0], [4.1, 17.0], [4.2, 17.0], [4.3, 17.0], [4.4, 17.0], [4.5, 17.0], [4.6, 17.0], [4.7, 17.0], [4.8, 17.0], [4.9, 17.0], [5.0, 18.0], [5.1, 18.0], [5.2, 18.0], [5.3, 18.0], [5.4, 18.0], [5.5, 18.0], [5.6, 18.0], [5.7, 18.0], [5.8, 18.0], [5.9, 18.0], [6.0, 18.0], [6.1, 18.0], [6.2, 18.0], [6.3, 18.0], [6.4, 18.0], [6.5, 18.0], [6.6, 18.0], [6.7, 18.0], [6.8, 18.0], [6.9, 18.0], [7.0, 19.0], [7.1, 19.0], [7.2, 19.0], [7.3, 19.0], [7.4, 19.0], [7.5, 19.0], [7.6, 19.0], [7.7, 19.0], [7.8, 19.0], [7.9, 19.0], [8.0, 19.0], [8.1, 19.0], [8.2, 19.0], [8.3, 19.0], [8.4, 19.0], [8.5, 19.0], [8.6, 19.0], [8.7, 19.0], [8.8, 19.0], [8.9, 19.0], [9.0, 20.0], [9.1, 20.0], [9.2, 20.0], [9.3, 20.0], [9.4, 20.0], [9.5, 20.0], [9.6, 20.0], [9.7, 20.0], [9.8, 20.0], [9.9, 20.0], [10.0, 21.0], [10.1, 21.0], [10.2, 21.0], [10.3, 21.0], [10.4, 21.0], [10.5, 21.0], [10.6, 21.0], [10.7, 21.0], [10.8, 21.0], [10.9, 21.0], [11.0, 21.0], [11.1, 21.0], [11.2, 21.0], [11.3, 21.0], [11.4, 21.0], [11.5, 21.0], [11.6, 21.0], [11.7, 21.0], [11.8, 21.0], [11.9, 21.0], [12.0, 21.0], [12.1, 21.0], [12.2, 21.0], [12.3, 21.0], [12.4, 21.0], [12.5, 21.0], [12.6, 21.0], [12.7, 21.0], [12.8, 21.0], [12.9, 21.0], [13.0, 22.0], [13.1, 22.0], [13.2, 22.0], [13.3, 22.0], [13.4, 22.0], [13.5, 22.0], [13.6, 22.0], [13.7, 22.0], [13.8, 22.0], [13.9, 22.0], [14.0, 22.0], [14.1, 22.0], [14.2, 22.0], [14.3, 22.0], [14.4, 22.0], [14.5, 22.0], [14.6, 22.0], [14.7, 22.0], [14.8, 22.0], [14.9, 22.0], [15.0, 23.0], [15.1, 23.0], [15.2, 23.0], [15.3, 23.0], [15.4, 23.0], [15.5, 23.0], [15.6, 23.0], [15.7, 23.0], [15.8, 23.0], [15.9, 23.0], [16.0, 23.0], [16.1, 23.0], [16.2, 23.0], [16.3, 23.0], [16.4, 23.0], [16.5, 23.0], [16.6, 23.0], [16.7, 23.0], [16.8, 23.0], [16.9, 23.0], [17.0, 24.0], [17.1, 24.0], [17.2, 24.0], [17.3, 24.0], [17.4, 24.0], [17.5, 24.0], [17.6, 24.0], [17.7, 24.0], [17.8, 24.0], [17.9, 24.0], [18.0, 26.0], [18.1, 26.0], [18.2, 26.0], [18.3, 26.0], [18.4, 26.0], [18.5, 26.0], [18.6, 26.0], [18.7, 26.0], [18.8, 26.0], [18.9, 26.0], [19.0, 26.0], [19.1, 26.0], [19.2, 26.0], [19.3, 26.0], [19.4, 26.0], [19.5, 26.0], [19.6, 26.0], [19.7, 26.0], [19.8, 26.0], [19.9, 26.0], [20.0, 26.0], [20.1, 26.0], [20.2, 26.0], [20.3, 26.0], [20.4, 26.0], [20.5, 26.0], [20.6, 26.0], [20.7, 26.0], [20.8, 26.0], [20.9, 26.0], [21.0, 28.0], [21.1, 28.0], [21.2, 28.0], [21.3, 28.0], [21.4, 28.0], [21.5, 28.0], [21.6, 28.0], [21.7, 28.0], [21.8, 28.0], [21.9, 28.0], [22.0, 30.0], [22.1, 30.0], [22.2, 30.0], [22.3, 30.0], [22.4, 30.0], [22.5, 30.0], [22.6, 30.0], [22.7, 30.0], [22.8, 30.0], [22.9, 30.0], [23.0, 33.0], [23.1, 33.0], [23.2, 33.0], [23.3, 33.0], [23.4, 33.0], [23.5, 33.0], [23.6, 33.0], [23.7, 33.0], [23.8, 33.0], [23.9, 33.0], [24.0, 34.0], [24.1, 34.0], [24.2, 34.0], [24.3, 34.0], [24.4, 34.0], [24.5, 34.0], [24.6, 34.0], [24.7, 34.0], [24.8, 34.0], [24.9, 34.0], [25.0, 38.0], [25.1, 38.0], [25.2, 38.0], [25.3, 38.0], [25.4, 38.0], [25.5, 38.0], [25.6, 38.0], [25.7, 38.0], [25.8, 38.0], [25.9, 38.0], [26.0, 40.0], [26.1, 40.0], [26.2, 40.0], [26.3, 40.0], [26.4, 40.0], [26.5, 40.0], [26.6, 40.0], [26.7, 40.0], [26.8, 40.0], [26.9, 40.0], [27.0, 41.0], [27.1, 41.0], [27.2, 41.0], [27.3, 41.0], [27.4, 41.0], [27.5, 41.0], [27.6, 41.0], [27.7, 41.0], [27.8, 41.0], [27.9, 41.0], [28.0, 42.0], [28.1, 42.0], [28.2, 42.0], [28.3, 42.0], [28.4, 42.0], [28.5, 42.0], [28.6, 42.0], [28.7, 42.0], [28.8, 42.0], [28.9, 42.0], [29.0, 45.0], [29.1, 45.0], [29.2, 45.0], [29.3, 45.0], [29.4, 45.0], [29.5, 45.0], [29.6, 45.0], [29.7, 45.0], [29.8, 45.0], [29.9, 45.0], [30.0, 129.0], [30.1, 129.0], [30.2, 129.0], [30.3, 129.0], [30.4, 129.0], [30.5, 129.0], [30.6, 129.0], [30.7, 129.0], [30.8, 129.0], [30.9, 129.0], [31.0, 143.0], [31.1, 143.0], [31.2, 143.0], [31.3, 143.0], [31.4, 143.0], [31.5, 143.0], [31.6, 143.0], [31.7, 143.0], [31.8, 143.0], [31.9, 143.0], [32.0, 152.0], [32.1, 152.0], [32.2, 152.0], [32.3, 152.0], [32.4, 152.0], [32.5, 152.0], [32.6, 152.0], [32.7, 152.0], [32.8, 152.0], [32.9, 152.0], [33.0, 171.0], [33.1, 171.0], [33.2, 171.0], [33.3, 171.0], [33.4, 171.0], [33.5, 171.0], [33.6, 171.0], [33.7, 171.0], [33.8, 171.0], [33.9, 171.0], [34.0, 213.0], [34.1, 213.0], [34.2, 213.0], [34.3, 213.0], [34.4, 213.0], [34.5, 213.0], [34.6, 213.0], [34.7, 213.0], [34.8, 213.0], [34.9, 213.0], [35.0, 221.0], [35.1, 221.0], [35.2, 221.0], [35.3, 221.0], [35.4, 221.0], [35.5, 221.0], [35.6, 221.0], [35.7, 221.0], [35.8, 221.0], [35.9, 221.0], [36.0, 267.0], [36.1, 267.0], [36.2, 267.0], [36.3, 267.0], [36.4, 267.0], [36.5, 267.0], [36.6, 267.0], [36.7, 267.0], [36.8, 267.0], [36.9, 267.0], [37.0, 313.0], [37.1, 313.0], [37.2, 313.0], [37.3, 313.0], [37.4, 313.0], [37.5, 313.0], [37.6, 313.0], [37.7, 313.0], [37.8, 313.0], [37.9, 313.0], [38.0, 328.0], [38.1, 328.0], [38.2, 328.0], [38.3, 328.0], [38.4, 328.0], [38.5, 328.0], [38.6, 328.0], [38.7, 328.0], [38.8, 328.0], [38.9, 328.0], [39.0, 333.0], [39.1, 333.0], [39.2, 333.0], [39.3, 333.0], [39.4, 333.0], [39.5, 333.0], [39.6, 333.0], [39.7, 333.0], [39.8, 333.0], [39.9, 333.0], [40.0, 334.0], [40.1, 334.0], [40.2, 334.0], [40.3, 334.0], [40.4, 334.0], [40.5, 334.0], [40.6, 334.0], [40.7, 334.0], [40.8, 334.0], [40.9, 334.0], [41.0, 338.0], [41.1, 338.0], [41.2, 338.0], [41.3, 338.0], [41.4, 338.0], [41.5, 338.0], [41.6, 338.0], [41.7, 338.0], [41.8, 338.0], [41.9, 338.0], [42.0, 356.0], [42.1, 356.0], [42.2, 356.0], [42.3, 356.0], [42.4, 356.0], [42.5, 356.0], [42.6, 356.0], [42.7, 356.0], [42.8, 356.0], [42.9, 356.0], [43.0, 356.0], [43.1, 356.0], [43.2, 356.0], [43.3, 356.0], [43.4, 356.0], [43.5, 356.0], [43.6, 356.0], [43.7, 356.0], [43.8, 356.0], [43.9, 356.0], [44.0, 358.0], [44.1, 358.0], [44.2, 358.0], [44.3, 358.0], [44.4, 358.0], [44.5, 358.0], [44.6, 358.0], [44.7, 358.0], [44.8, 358.0], [44.9, 358.0], [45.0, 361.0], [45.1, 361.0], [45.2, 361.0], [45.3, 361.0], [45.4, 361.0], [45.5, 361.0], [45.6, 361.0], [45.7, 361.0], [45.8, 361.0], [45.9, 361.0], [46.0, 362.0], [46.1, 362.0], [46.2, 362.0], [46.3, 362.0], [46.4, 362.0], [46.5, 362.0], [46.6, 362.0], [46.7, 362.0], [46.8, 362.0], [46.9, 362.0], [47.0, 365.0], [47.1, 365.0], [47.2, 365.0], [47.3, 365.0], [47.4, 365.0], [47.5, 365.0], [47.6, 365.0], [47.7, 365.0], [47.8, 365.0], [47.9, 365.0], [48.0, 368.0], [48.1, 368.0], [48.2, 368.0], [48.3, 368.0], [48.4, 368.0], [48.5, 368.0], [48.6, 368.0], [48.7, 368.0], [48.8, 368.0], [48.9, 368.0], [49.0, 373.0], [49.1, 373.0], [49.2, 373.0], [49.3, 373.0], [49.4, 373.0], [49.5, 373.0], [49.6, 373.0], [49.7, 373.0], [49.8, 373.0], [49.9, 373.0], [50.0, 373.0], [50.1, 373.0], [50.2, 373.0], [50.3, 373.0], [50.4, 373.0], [50.5, 373.0], [50.6, 373.0], [50.7, 373.0], [50.8, 373.0], [50.9, 373.0], [51.0, 375.0], [51.1, 375.0], [51.2, 375.0], [51.3, 375.0], [51.4, 375.0], [51.5, 375.0], [51.6, 375.0], [51.7, 375.0], [51.8, 375.0], [51.9, 375.0], [52.0, 376.0], [52.1, 376.0], [52.2, 376.0], [52.3, 376.0], [52.4, 376.0], [52.5, 376.0], [52.6, 376.0], [52.7, 376.0], [52.8, 376.0], [52.9, 376.0], [53.0, 383.0], [53.1, 383.0], [53.2, 383.0], [53.3, 383.0], [53.4, 383.0], [53.5, 383.0], [53.6, 383.0], [53.7, 383.0], [53.8, 383.0], [53.9, 383.0], [54.0, 384.0], [54.1, 384.0], [54.2, 384.0], [54.3, 384.0], [54.4, 384.0], [54.5, 384.0], [54.6, 384.0], [54.7, 384.0], [54.8, 384.0], [54.9, 384.0], [55.0, 387.0], [55.1, 387.0], [55.2, 387.0], [55.3, 387.0], [55.4, 387.0], [55.5, 387.0], [55.6, 387.0], [55.7, 387.0], [55.8, 387.0], [55.9, 387.0], [56.0, 395.0], [56.1, 395.0], [56.2, 395.0], [56.3, 395.0], [56.4, 395.0], [56.5, 395.0], [56.6, 395.0], [56.7, 395.0], [56.8, 395.0], [56.9, 395.0], [57.0, 398.0], [57.1, 398.0], [57.2, 398.0], [57.3, 398.0], [57.4, 398.0], [57.5, 398.0], [57.6, 398.0], [57.7, 398.0], [57.8, 398.0], [57.9, 398.0], [58.0, 398.0], [58.1, 398.0], [58.2, 398.0], [58.3, 398.0], [58.4, 398.0], [58.5, 398.0], [58.6, 398.0], [58.7, 398.0], [58.8, 398.0], [58.9, 398.0], [59.0, 410.0], [59.1, 410.0], [59.2, 410.0], [59.3, 410.0], [59.4, 410.0], [59.5, 410.0], [59.6, 410.0], [59.7, 410.0], [59.8, 410.0], [59.9, 410.0], [60.0, 411.0], [60.1, 411.0], [60.2, 411.0], [60.3, 411.0], [60.4, 411.0], [60.5, 411.0], [60.6, 411.0], [60.7, 411.0], [60.8, 411.0], [60.9, 411.0], [61.0, 418.0], [61.1, 418.0], [61.2, 418.0], [61.3, 418.0], [61.4, 418.0], [61.5, 418.0], [61.6, 418.0], [61.7, 418.0], [61.8, 418.0], [61.9, 418.0], [62.0, 423.0], [62.1, 423.0], [62.2, 423.0], [62.3, 423.0], [62.4, 423.0], [62.5, 423.0], [62.6, 423.0], [62.7, 423.0], [62.8, 423.0], [62.9, 423.0], [63.0, 425.0], [63.1, 425.0], [63.2, 425.0], [63.3, 425.0], [63.4, 425.0], [63.5, 425.0], [63.6, 425.0], [63.7, 425.0], [63.8, 425.0], [63.9, 425.0], [64.0, 441.0], [64.1, 441.0], [64.2, 441.0], [64.3, 441.0], [64.4, 441.0], [64.5, 441.0], [64.6, 441.0], [64.7, 441.0], [64.8, 441.0], [64.9, 441.0], [65.0, 446.0], [65.1, 446.0], [65.2, 446.0], [65.3, 446.0], [65.4, 446.0], [65.5, 446.0], [65.6, 446.0], [65.7, 446.0], [65.8, 446.0], [65.9, 446.0], [66.0, 449.0], [66.1, 449.0], [66.2, 449.0], [66.3, 449.0], [66.4, 449.0], [66.5, 449.0], [66.6, 449.0], [66.7, 449.0], [66.8, 449.0], [66.9, 449.0], [67.0, 454.0], [67.1, 454.0], [67.2, 454.0], [67.3, 454.0], [67.4, 454.0], [67.5, 454.0], [67.6, 454.0], [67.7, 454.0], [67.8, 454.0], [67.9, 454.0], [68.0, 461.0], [68.1, 461.0], [68.2, 461.0], [68.3, 461.0], [68.4, 461.0], [68.5, 461.0], [68.6, 461.0], [68.7, 461.0], [68.8, 461.0], [68.9, 461.0], [69.0, 462.0], [69.1, 462.0], [69.2, 462.0], [69.3, 462.0], [69.4, 462.0], [69.5, 462.0], [69.6, 462.0], [69.7, 462.0], [69.8, 462.0], [69.9, 462.0], [70.0, 465.0], [70.1, 465.0], [70.2, 465.0], [70.3, 465.0], [70.4, 465.0], [70.5, 465.0], [70.6, 465.0], [70.7, 465.0], [70.8, 465.0], [70.9, 465.0], [71.0, 470.0], [71.1, 470.0], [71.2, 470.0], [71.3, 470.0], [71.4, 470.0], [71.5, 470.0], [71.6, 470.0], [71.7, 470.0], [71.8, 470.0], [71.9, 470.0], [72.0, 473.0], [72.1, 473.0], [72.2, 473.0], [72.3, 473.0], [72.4, 473.0], [72.5, 473.0], [72.6, 473.0], [72.7, 473.0], [72.8, 473.0], [72.9, 473.0], [73.0, 486.0], [73.1, 486.0], [73.2, 486.0], [73.3, 486.0], [73.4, 486.0], [73.5, 486.0], [73.6, 486.0], [73.7, 486.0], [73.8, 486.0], [73.9, 486.0], [74.0, 504.0], [74.1, 504.0], [74.2, 504.0], [74.3, 504.0], [74.4, 504.0], [74.5, 504.0], [74.6, 504.0], [74.7, 504.0], [74.8, 504.0], [74.9, 504.0], [75.0, 513.0], [75.1, 513.0], [75.2, 513.0], [75.3, 513.0], [75.4, 513.0], [75.5, 513.0], [75.6, 513.0], [75.7, 513.0], [75.8, 513.0], [75.9, 513.0], [76.0, 514.0], [76.1, 514.0], [76.2, 514.0], [76.3, 514.0], [76.4, 514.0], [76.5, 514.0], [76.6, 514.0], [76.7, 514.0], [76.8, 514.0], [76.9, 514.0], [77.0, 515.0], [77.1, 515.0], [77.2, 515.0], [77.3, 515.0], [77.4, 515.0], [77.5, 515.0], [77.6, 515.0], [77.7, 515.0], [77.8, 515.0], [77.9, 515.0], [78.0, 522.0], [78.1, 522.0], [78.2, 522.0], [78.3, 522.0], [78.4, 522.0], [78.5, 522.0], [78.6, 522.0], [78.7, 522.0], [78.8, 522.0], [78.9, 522.0], [79.0, 524.0], [79.1, 524.0], [79.2, 524.0], [79.3, 524.0], [79.4, 524.0], [79.5, 524.0], [79.6, 524.0], [79.7, 524.0], [79.8, 524.0], [79.9, 524.0], [80.0, 531.0], [80.1, 531.0], [80.2, 531.0], [80.3, 531.0], [80.4, 531.0], [80.5, 531.0], [80.6, 531.0], [80.7, 531.0], [80.8, 531.0], [80.9, 531.0], [81.0, 581.0], [81.1, 581.0], [81.2, 581.0], [81.3, 581.0], [81.4, 581.0], [81.5, 581.0], [81.6, 581.0], [81.7, 581.0], [81.8, 581.0], [81.9, 581.0], [82.0, 591.0], [82.1, 591.0], [82.2, 591.0], [82.3, 591.0], [82.4, 591.0], [82.5, 591.0], [82.6, 591.0], [82.7, 591.0], [82.8, 591.0], [82.9, 591.0], [83.0, 616.0], [83.1, 616.0], [83.2, 616.0], [83.3, 616.0], [83.4, 616.0], [83.5, 616.0], [83.6, 616.0], [83.7, 616.0], [83.8, 616.0], [83.9, 616.0], [84.0, 625.0], [84.1, 625.0], [84.2, 625.0], [84.3, 625.0], [84.4, 625.0], [84.5, 625.0], [84.6, 625.0], [84.7, 625.0], [84.8, 625.0], [84.9, 625.0], [85.0, 642.0], [85.1, 642.0], [85.2, 642.0], [85.3, 642.0], [85.4, 642.0], [85.5, 642.0], [85.6, 642.0], [85.7, 642.0], [85.8, 642.0], [85.9, 642.0], [86.0, 657.0], [86.1, 657.0], [86.2, 657.0], [86.3, 657.0], [86.4, 657.0], [86.5, 657.0], [86.6, 657.0], [86.7, 657.0], [86.8, 657.0], [86.9, 657.0], [87.0, 713.0], [87.1, 713.0], [87.2, 713.0], [87.3, 713.0], [87.4, 713.0], [87.5, 713.0], [87.6, 713.0], [87.7, 713.0], [87.8, 713.0], [87.9, 713.0], [88.0, 718.0], [88.1, 718.0], [88.2, 718.0], [88.3, 718.0], [88.4, 718.0], [88.5, 718.0], [88.6, 718.0], [88.7, 718.0], [88.8, 718.0], [88.9, 718.0], [89.0, 740.0], [89.1, 740.0], [89.2, 740.0], [89.3, 740.0], [89.4, 740.0], [89.5, 740.0], [89.6, 740.0], [89.7, 740.0], [89.8, 740.0], [89.9, 740.0], [90.0, 805.0], [90.1, 805.0], [90.2, 805.0], [90.3, 805.0], [90.4, 805.0], [90.5, 805.0], [90.6, 805.0], [90.7, 805.0], [90.8, 805.0], [90.9, 805.0], [91.0, 983.0], [91.1, 983.0], [91.2, 983.0], [91.3, 983.0], [91.4, 983.0], [91.5, 983.0], [91.6, 983.0], [91.7, 983.0], [91.8, 983.0], [91.9, 983.0], [92.0, 1030.0], [92.1, 1030.0], [92.2, 1030.0], [92.3, 1030.0], [92.4, 1030.0], [92.5, 1030.0], [92.6, 1030.0], [92.7, 1030.0], [92.8, 1030.0], [92.9, 1030.0], [93.0, 1144.0], [93.1, 1144.0], [93.2, 1144.0], [93.3, 1144.0], [93.4, 1144.0], [93.5, 1144.0], [93.6, 1144.0], [93.7, 1144.0], [93.8, 1144.0], [93.9, 1144.0], [94.0, 1205.0], [94.1, 1205.0], [94.2, 1205.0], [94.3, 1205.0], [94.4, 1205.0], [94.5, 1205.0], [94.6, 1205.0], [94.7, 1205.0], [94.8, 1205.0], [94.9, 1205.0], [95.0, 1241.0], [95.1, 1241.0], [95.2, 1241.0], [95.3, 1241.0], [95.4, 1241.0], [95.5, 1241.0], [95.6, 1241.0], [95.7, 1241.0], [95.8, 1241.0], [95.9, 1241.0], [96.0, 2284.0], [96.1, 2284.0], [96.2, 2284.0], [96.3, 2284.0], [96.4, 2284.0], [96.5, 2284.0], [96.6, 2284.0], [96.7, 2284.0], [96.8, 2284.0], [96.9, 2284.0], [97.0, 3209.0], [97.1, 3209.0], [97.2, 3209.0], [97.3, 3209.0], [97.4, 3209.0], [97.5, 3209.0], [97.6, 3209.0], [97.7, 3209.0], [97.8, 3209.0], [97.9, 3209.0], [98.0, 3238.0], [98.1, 3238.0], [98.2, 3238.0], [98.3, 3238.0], [98.4, 3238.0], [98.5, 3238.0], [98.6, 3238.0], [98.7, 3238.0], [98.8, 3238.0], [98.9, 3238.0], [99.0, 3670.0], [99.1, 3670.0], [99.2, 3670.0], [99.3, 3670.0], [99.4, 3670.0], [99.5, 3670.0], [99.6, 3670.0], [99.7, 3670.0], [99.8, 3670.0], [99.9, 3670.0]], "isOverall": false, "label": "get actions", "isController": false}, {"data": [[0.0, 14.0], [0.1, 14.0], [0.2, 14.0], [0.3, 14.0], [0.4, 14.0], [0.5, 14.0], [0.6, 14.0], [0.7, 14.0], [0.8, 14.0], [0.9, 14.0], [1.0, 14.0], [1.1, 14.0], [1.2, 14.0], [1.3, 14.0], [1.4, 14.0], [1.5, 14.0], [1.6, 14.0], [1.7, 14.0], [1.8, 14.0], [1.9, 14.0], [2.0, 14.0], [2.1, 14.0], [2.2, 14.0], [2.3, 14.0], [2.4, 14.0], [2.5, 14.0], [2.6, 14.0], [2.7, 14.0], [2.8, 14.0], [2.9, 14.0], [3.0, 14.0], [3.1, 14.0], [3.2, 14.0], [3.3, 14.0], [3.4, 14.0], [3.5, 14.0], [3.6, 14.0], [3.7, 14.0], [3.8, 14.0], [3.9, 14.0], [4.0, 15.0], [4.1, 15.0], [4.2, 15.0], [4.3, 15.0], [4.4, 15.0], [4.5, 15.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 15.0], [5.0, 17.0], [5.1, 17.0], [5.2, 17.0], [5.3, 17.0], [5.4, 17.0], [5.5, 17.0], [5.6, 17.0], [5.7, 17.0], [5.8, 17.0], [5.9, 17.0], [6.0, 17.0], [6.1, 17.0], [6.2, 17.0], [6.3, 17.0], [6.4, 17.0], [6.5, 17.0], [6.6, 17.0], [6.7, 17.0], [6.8, 17.0], [6.9, 17.0], [7.0, 18.0], [7.1, 18.0], [7.2, 18.0], [7.3, 18.0], [7.4, 18.0], [7.5, 18.0], [7.6, 18.0], [7.7, 18.0], [7.8, 18.0], [7.9, 18.0], [8.0, 18.0], [8.1, 18.0], [8.2, 18.0], [8.3, 18.0], [8.4, 18.0], [8.5, 18.0], [8.6, 18.0], [8.7, 18.0], [8.8, 18.0], [8.9, 18.0], [9.0, 18.0], [9.1, 18.0], [9.2, 18.0], [9.3, 18.0], [9.4, 18.0], [9.5, 18.0], [9.6, 18.0], [9.7, 18.0], [9.8, 18.0], [9.9, 18.0], [10.0, 18.0], [10.1, 18.0], [10.2, 18.0], [10.3, 18.0], [10.4, 18.0], [10.5, 18.0], [10.6, 18.0], [10.7, 18.0], [10.8, 18.0], [10.9, 18.0], [11.0, 18.0], [11.1, 18.0], [11.2, 18.0], [11.3, 18.0], [11.4, 18.0], [11.5, 18.0], [11.6, 18.0], [11.7, 18.0], [11.8, 18.0], [11.9, 18.0], [12.0, 19.0], [12.1, 19.0], [12.2, 19.0], [12.3, 19.0], [12.4, 19.0], [12.5, 19.0], [12.6, 19.0], [12.7, 19.0], [12.8, 19.0], [12.9, 19.0], [13.0, 19.0], [13.1, 19.0], [13.2, 19.0], [13.3, 19.0], [13.4, 19.0], [13.5, 19.0], [13.6, 19.0], [13.7, 19.0], [13.8, 19.0], [13.9, 19.0], [14.0, 19.0], [14.1, 19.0], [14.2, 19.0], [14.3, 19.0], [14.4, 19.0], [14.5, 19.0], [14.6, 19.0], [14.7, 19.0], [14.8, 19.0], [14.9, 19.0], [15.0, 19.0], [15.1, 19.0], [15.2, 19.0], [15.3, 19.0], [15.4, 19.0], [15.5, 19.0], [15.6, 19.0], [15.7, 19.0], [15.8, 19.0], [15.9, 19.0], [16.0, 19.0], [16.1, 19.0], [16.2, 19.0], [16.3, 19.0], [16.4, 19.0], [16.5, 19.0], [16.6, 19.0], [16.7, 19.0], [16.8, 19.0], [16.9, 19.0], [17.0, 19.0], [17.1, 19.0], [17.2, 19.0], [17.3, 19.0], [17.4, 19.0], [17.5, 19.0], [17.6, 19.0], [17.7, 19.0], [17.8, 19.0], [17.9, 19.0], [18.0, 20.0], [18.1, 20.0], [18.2, 20.0], [18.3, 20.0], [18.4, 20.0], [18.5, 20.0], [18.6, 20.0], [18.7, 20.0], [18.8, 20.0], [18.9, 20.0], [19.0, 20.0], [19.1, 20.0], [19.2, 20.0], [19.3, 20.0], [19.4, 20.0], [19.5, 20.0], [19.6, 20.0], [19.7, 20.0], [19.8, 20.0], [19.9, 20.0], [20.0, 22.0], [20.1, 22.0], [20.2, 22.0], [20.3, 22.0], [20.4, 22.0], [20.5, 22.0], [20.6, 22.0], [20.7, 22.0], [20.8, 22.0], [20.9, 22.0], [21.0, 23.0], [21.1, 23.0], [21.2, 23.0], [21.3, 23.0], [21.4, 23.0], [21.5, 23.0], [21.6, 23.0], [21.7, 23.0], [21.8, 23.0], [21.9, 23.0], [22.0, 23.0], [22.1, 23.0], [22.2, 23.0], [22.3, 23.0], [22.4, 23.0], [22.5, 23.0], [22.6, 23.0], [22.7, 23.0], [22.8, 23.0], [22.9, 23.0], [23.0, 23.0], [23.1, 23.0], [23.2, 23.0], [23.3, 23.0], [23.4, 23.0], [23.5, 23.0], [23.6, 23.0], [23.7, 23.0], [23.8, 23.0], [23.9, 23.0], [24.0, 24.0], [24.1, 24.0], [24.2, 24.0], [24.3, 24.0], [24.4, 24.0], [24.5, 24.0], [24.6, 24.0], [24.7, 24.0], [24.8, 24.0], [24.9, 24.0], [25.0, 24.0], [25.1, 24.0], [25.2, 24.0], [25.3, 24.0], [25.4, 24.0], [25.5, 24.0], [25.6, 24.0], [25.7, 24.0], [25.8, 24.0], [25.9, 24.0], [26.0, 25.0], [26.1, 25.0], [26.2, 25.0], [26.3, 25.0], [26.4, 25.0], [26.5, 25.0], [26.6, 25.0], [26.7, 25.0], [26.8, 25.0], [26.9, 25.0], [27.0, 25.0], [27.1, 25.0], [27.2, 25.0], [27.3, 25.0], [27.4, 25.0], [27.5, 25.0], [27.6, 25.0], [27.7, 25.0], [27.8, 25.0], [27.9, 25.0], [28.0, 26.0], [28.1, 26.0], [28.2, 26.0], [28.3, 26.0], [28.4, 26.0], [28.5, 26.0], [28.6, 26.0], [28.7, 26.0], [28.8, 26.0], [28.9, 26.0], [29.0, 26.0], [29.1, 26.0], [29.2, 26.0], [29.3, 26.0], [29.4, 26.0], [29.5, 26.0], [29.6, 26.0], [29.7, 26.0], [29.8, 26.0], [29.9, 26.0], [30.0, 27.0], [30.1, 27.0], [30.2, 27.0], [30.3, 27.0], [30.4, 27.0], [30.5, 27.0], [30.6, 27.0], [30.7, 27.0], [30.8, 27.0], [30.9, 27.0], [31.0, 27.0], [31.1, 27.0], [31.2, 27.0], [31.3, 27.0], [31.4, 27.0], [31.5, 27.0], [31.6, 27.0], [31.7, 27.0], [31.8, 27.0], [31.9, 27.0], [32.0, 30.0], [32.1, 30.0], [32.2, 30.0], [32.3, 30.0], [32.4, 30.0], [32.5, 30.0], [32.6, 30.0], [32.7, 30.0], [32.8, 30.0], [32.9, 30.0], [33.0, 30.0], [33.1, 30.0], [33.2, 30.0], [33.3, 30.0], [33.4, 30.0], [33.5, 30.0], [33.6, 30.0], [33.7, 30.0], [33.8, 30.0], [33.9, 30.0], [34.0, 30.0], [34.1, 30.0], [34.2, 30.0], [34.3, 30.0], [34.4, 30.0], [34.5, 30.0], [34.6, 30.0], [34.7, 30.0], [34.8, 30.0], [34.9, 30.0], [35.0, 30.0], [35.1, 30.0], [35.2, 30.0], [35.3, 30.0], [35.4, 30.0], [35.5, 30.0], [35.6, 30.0], [35.7, 30.0], [35.8, 30.0], [35.9, 30.0], [36.0, 30.0], [36.1, 30.0], [36.2, 30.0], [36.3, 30.0], [36.4, 30.0], [36.5, 30.0], [36.6, 30.0], [36.7, 30.0], [36.8, 30.0], [36.9, 30.0], [37.0, 31.0], [37.1, 31.0], [37.2, 31.0], [37.3, 31.0], [37.4, 31.0], [37.5, 31.0], [37.6, 31.0], [37.7, 31.0], [37.8, 31.0], [37.9, 31.0], [38.0, 34.0], [38.1, 34.0], [38.2, 34.0], [38.3, 34.0], [38.4, 34.0], [38.5, 34.0], [38.6, 34.0], [38.7, 34.0], [38.8, 34.0], [38.9, 34.0], [39.0, 37.0], [39.1, 37.0], [39.2, 37.0], [39.3, 37.0], [39.4, 37.0], [39.5, 37.0], [39.6, 37.0], [39.7, 37.0], [39.8, 37.0], [39.9, 37.0], [40.0, 38.0], [40.1, 38.0], [40.2, 38.0], [40.3, 38.0], [40.4, 38.0], [40.5, 38.0], [40.6, 38.0], [40.7, 38.0], [40.8, 38.0], [40.9, 38.0], [41.0, 38.0], [41.1, 38.0], [41.2, 38.0], [41.3, 38.0], [41.4, 38.0], [41.5, 38.0], [41.6, 38.0], [41.7, 38.0], [41.8, 38.0], [41.9, 38.0], [42.0, 40.0], [42.1, 40.0], [42.2, 40.0], [42.3, 40.0], [42.4, 40.0], [42.5, 40.0], [42.6, 40.0], [42.7, 40.0], [42.8, 40.0], [42.9, 40.0], [43.0, 42.0], [43.1, 42.0], [43.2, 42.0], [43.3, 42.0], [43.4, 42.0], [43.5, 42.0], [43.6, 42.0], [43.7, 42.0], [43.8, 42.0], [43.9, 42.0], [44.0, 43.0], [44.1, 43.0], [44.2, 43.0], [44.3, 43.0], [44.4, 43.0], [44.5, 43.0], [44.6, 43.0], [44.7, 43.0], [44.8, 43.0], [44.9, 43.0], [45.0, 43.0], [45.1, 43.0], [45.2, 43.0], [45.3, 43.0], [45.4, 43.0], [45.5, 43.0], [45.6, 43.0], [45.7, 43.0], [45.8, 43.0], [45.9, 43.0], [46.0, 44.0], [46.1, 44.0], [46.2, 44.0], [46.3, 44.0], [46.4, 44.0], [46.5, 44.0], [46.6, 44.0], [46.7, 44.0], [46.8, 44.0], [46.9, 44.0], [47.0, 48.0], [47.1, 48.0], [47.2, 48.0], [47.3, 48.0], [47.4, 48.0], [47.5, 48.0], [47.6, 48.0], [47.7, 48.0], [47.8, 48.0], [47.9, 48.0], [48.0, 49.0], [48.1, 49.0], [48.2, 49.0], [48.3, 49.0], [48.4, 49.0], [48.5, 49.0], [48.6, 49.0], [48.7, 49.0], [48.8, 49.0], [48.9, 49.0], [49.0, 53.0], [49.1, 53.0], [49.2, 53.0], [49.3, 53.0], [49.4, 53.0], [49.5, 53.0], [49.6, 53.0], [49.7, 53.0], [49.8, 53.0], [49.9, 53.0], [50.0, 56.0], [50.1, 56.0], [50.2, 56.0], [50.3, 56.0], [50.4, 56.0], [50.5, 56.0], [50.6, 56.0], [50.7, 56.0], [50.8, 56.0], [50.9, 56.0], [51.0, 60.0], [51.1, 60.0], [51.2, 60.0], [51.3, 60.0], [51.4, 60.0], [51.5, 60.0], [51.6, 60.0], [51.7, 60.0], [51.8, 60.0], [51.9, 60.0], [52.0, 68.0], [52.1, 68.0], [52.2, 68.0], [52.3, 68.0], [52.4, 68.0], [52.5, 68.0], [52.6, 68.0], [52.7, 68.0], [52.8, 68.0], [52.9, 68.0], [53.0, 68.0], [53.1, 68.0], [53.2, 68.0], [53.3, 68.0], [53.4, 68.0], [53.5, 68.0], [53.6, 68.0], [53.7, 68.0], [53.8, 68.0], [53.9, 68.0], [54.0, 88.0], [54.1, 88.0], [54.2, 88.0], [54.3, 88.0], [54.4, 88.0], [54.5, 88.0], [54.6, 88.0], [54.7, 88.0], [54.8, 88.0], [54.9, 88.0], [55.0, 91.0], [55.1, 91.0], [55.2, 91.0], [55.3, 91.0], [55.4, 91.0], [55.5, 91.0], [55.6, 91.0], [55.7, 91.0], [55.8, 91.0], [55.9, 91.0], [56.0, 93.0], [56.1, 93.0], [56.2, 93.0], [56.3, 93.0], [56.4, 93.0], [56.5, 93.0], [56.6, 93.0], [56.7, 93.0], [56.8, 93.0], [56.9, 93.0], [57.0, 95.0], [57.1, 95.0], [57.2, 95.0], [57.3, 95.0], [57.4, 95.0], [57.5, 95.0], [57.6, 95.0], [57.7, 95.0], [57.8, 95.0], [57.9, 95.0], [58.0, 107.0], [58.1, 107.0], [58.2, 107.0], [58.3, 107.0], [58.4, 107.0], [58.5, 107.0], [58.6, 107.0], [58.7, 107.0], [58.8, 107.0], [58.9, 107.0], [59.0, 117.0], [59.1, 117.0], [59.2, 117.0], [59.3, 117.0], [59.4, 117.0], [59.5, 117.0], [59.6, 117.0], [59.7, 117.0], [59.8, 117.0], [59.9, 117.0], [60.0, 117.0], [60.1, 117.0], [60.2, 117.0], [60.3, 117.0], [60.4, 117.0], [60.5, 117.0], [60.6, 117.0], [60.7, 117.0], [60.8, 117.0], [60.9, 117.0], [61.0, 121.0], [61.1, 121.0], [61.2, 121.0], [61.3, 121.0], [61.4, 121.0], [61.5, 121.0], [61.6, 121.0], [61.7, 121.0], [61.8, 121.0], [61.9, 121.0], [62.0, 129.0], [62.1, 129.0], [62.2, 129.0], [62.3, 129.0], [62.4, 129.0], [62.5, 129.0], [62.6, 129.0], [62.7, 129.0], [62.8, 129.0], [62.9, 129.0], [63.0, 140.0], [63.1, 140.0], [63.2, 140.0], [63.3, 140.0], [63.4, 140.0], [63.5, 140.0], [63.6, 140.0], [63.7, 140.0], [63.8, 140.0], [63.9, 140.0], [64.0, 144.0], [64.1, 144.0], [64.2, 144.0], [64.3, 144.0], [64.4, 144.0], [64.5, 144.0], [64.6, 144.0], [64.7, 144.0], [64.8, 144.0], [64.9, 144.0], [65.0, 164.0], [65.1, 164.0], [65.2, 164.0], [65.3, 164.0], [65.4, 164.0], [65.5, 164.0], [65.6, 164.0], [65.7, 164.0], [65.8, 164.0], [65.9, 164.0], [66.0, 167.0], [66.1, 167.0], [66.2, 167.0], [66.3, 167.0], [66.4, 167.0], [66.5, 167.0], [66.6, 167.0], [66.7, 167.0], [66.8, 167.0], [66.9, 167.0], [67.0, 170.0], [67.1, 170.0], [67.2, 170.0], [67.3, 170.0], [67.4, 170.0], [67.5, 170.0], [67.6, 170.0], [67.7, 170.0], [67.8, 170.0], [67.9, 170.0], [68.0, 176.0], [68.1, 176.0], [68.2, 176.0], [68.3, 176.0], [68.4, 176.0], [68.5, 176.0], [68.6, 176.0], [68.7, 176.0], [68.8, 176.0], [68.9, 176.0], [69.0, 182.0], [69.1, 182.0], [69.2, 182.0], [69.3, 182.0], [69.4, 182.0], [69.5, 182.0], [69.6, 182.0], [69.7, 182.0], [69.8, 182.0], [69.9, 182.0], [70.0, 186.0], [70.1, 186.0], [70.2, 186.0], [70.3, 186.0], [70.4, 186.0], [70.5, 186.0], [70.6, 186.0], [70.7, 186.0], [70.8, 186.0], [70.9, 186.0], [71.0, 187.0], [71.1, 187.0], [71.2, 187.0], [71.3, 187.0], [71.4, 187.0], [71.5, 187.0], [71.6, 187.0], [71.7, 187.0], [71.8, 187.0], [71.9, 187.0], [72.0, 209.0], [72.1, 209.0], [72.2, 209.0], [72.3, 209.0], [72.4, 209.0], [72.5, 209.0], [72.6, 209.0], [72.7, 209.0], [72.8, 209.0], [72.9, 209.0], [73.0, 219.0], [73.1, 219.0], [73.2, 219.0], [73.3, 219.0], [73.4, 219.0], [73.5, 219.0], [73.6, 219.0], [73.7, 219.0], [73.8, 219.0], [73.9, 219.0], [74.0, 219.0], [74.1, 219.0], [74.2, 219.0], [74.3, 219.0], [74.4, 219.0], [74.5, 219.0], [74.6, 219.0], [74.7, 219.0], [74.8, 219.0], [74.9, 219.0], [75.0, 226.0], [75.1, 226.0], [75.2, 226.0], [75.3, 226.0], [75.4, 226.0], [75.5, 226.0], [75.6, 226.0], [75.7, 226.0], [75.8, 226.0], [75.9, 226.0], [76.0, 228.0], [76.1, 228.0], [76.2, 228.0], [76.3, 228.0], [76.4, 228.0], [76.5, 228.0], [76.6, 228.0], [76.7, 228.0], [76.8, 228.0], [76.9, 228.0], [77.0, 262.0], [77.1, 262.0], [77.2, 262.0], [77.3, 262.0], [77.4, 262.0], [77.5, 262.0], [77.6, 262.0], [77.7, 262.0], [77.8, 262.0], [77.9, 262.0], [78.0, 302.0], [78.1, 302.0], [78.2, 302.0], [78.3, 302.0], [78.4, 302.0], [78.5, 302.0], [78.6, 302.0], [78.7, 302.0], [78.8, 302.0], [78.9, 302.0], [79.0, 308.0], [79.1, 308.0], [79.2, 308.0], [79.3, 308.0], [79.4, 308.0], [79.5, 308.0], [79.6, 308.0], [79.7, 308.0], [79.8, 308.0], [79.9, 308.0], [80.0, 311.0], [80.1, 311.0], [80.2, 311.0], [80.3, 311.0], [80.4, 311.0], [80.5, 311.0], [80.6, 311.0], [80.7, 311.0], [80.8, 311.0], [80.9, 311.0], [81.0, 313.0], [81.1, 313.0], [81.2, 313.0], [81.3, 313.0], [81.4, 313.0], [81.5, 313.0], [81.6, 313.0], [81.7, 313.0], [81.8, 313.0], [81.9, 313.0], [82.0, 316.0], [82.1, 316.0], [82.2, 316.0], [82.3, 316.0], [82.4, 316.0], [82.5, 316.0], [82.6, 316.0], [82.7, 316.0], [82.8, 316.0], [82.9, 316.0], [83.0, 325.0], [83.1, 325.0], [83.2, 325.0], [83.3, 325.0], [83.4, 325.0], [83.5, 325.0], [83.6, 325.0], [83.7, 325.0], [83.8, 325.0], [83.9, 325.0], [84.0, 337.0], [84.1, 337.0], [84.2, 337.0], [84.3, 337.0], [84.4, 337.0], [84.5, 337.0], [84.6, 337.0], [84.7, 337.0], [84.8, 337.0], [84.9, 337.0], [85.0, 348.0], [85.1, 348.0], [85.2, 348.0], [85.3, 348.0], [85.4, 348.0], [85.5, 348.0], [85.6, 348.0], [85.7, 348.0], [85.8, 348.0], [85.9, 348.0], [86.0, 353.0], [86.1, 353.0], [86.2, 353.0], [86.3, 353.0], [86.4, 353.0], [86.5, 353.0], [86.6, 353.0], [86.7, 353.0], [86.8, 353.0], [86.9, 353.0], [87.0, 368.0], [87.1, 368.0], [87.2, 368.0], [87.3, 368.0], [87.4, 368.0], [87.5, 368.0], [87.6, 368.0], [87.7, 368.0], [87.8, 368.0], [87.9, 368.0], [88.0, 368.0], [88.1, 368.0], [88.2, 368.0], [88.3, 368.0], [88.4, 368.0], [88.5, 368.0], [88.6, 368.0], [88.7, 368.0], [88.8, 368.0], [88.9, 368.0], [89.0, 370.0], [89.1, 370.0], [89.2, 370.0], [89.3, 370.0], [89.4, 370.0], [89.5, 370.0], [89.6, 370.0], [89.7, 370.0], [89.8, 370.0], [89.9, 370.0], [90.0, 379.0], [90.1, 379.0], [90.2, 379.0], [90.3, 379.0], [90.4, 379.0], [90.5, 379.0], [90.6, 379.0], [90.7, 379.0], [90.8, 379.0], [90.9, 379.0], [91.0, 404.0], [91.1, 404.0], [91.2, 404.0], [91.3, 404.0], [91.4, 404.0], [91.5, 404.0], [91.6, 404.0], [91.7, 404.0], [91.8, 404.0], [91.9, 404.0], [92.0, 426.0], [92.1, 426.0], [92.2, 426.0], [92.3, 426.0], [92.4, 426.0], [92.5, 426.0], [92.6, 426.0], [92.7, 426.0], [92.8, 426.0], [92.9, 426.0], [93.0, 439.0], [93.1, 439.0], [93.2, 439.0], [93.3, 439.0], [93.4, 439.0], [93.5, 439.0], [93.6, 439.0], [93.7, 439.0], [93.8, 439.0], [93.9, 439.0], [94.0, 441.0], [94.1, 441.0], [94.2, 441.0], [94.3, 441.0], [94.4, 441.0], [94.5, 441.0], [94.6, 441.0], [94.7, 441.0], [94.8, 441.0], [94.9, 441.0], [95.0, 474.0], [95.1, 474.0], [95.2, 474.0], [95.3, 474.0], [95.4, 474.0], [95.5, 474.0], [95.6, 474.0], [95.7, 474.0], [95.8, 474.0], [95.9, 474.0], [96.0, 487.0], [96.1, 487.0], [96.2, 487.0], [96.3, 487.0], [96.4, 487.0], [96.5, 487.0], [96.6, 487.0], [96.7, 487.0], [96.8, 487.0], [96.9, 487.0], [97.0, 577.0], [97.1, 577.0], [97.2, 577.0], [97.3, 577.0], [97.4, 577.0], [97.5, 577.0], [97.6, 577.0], [97.7, 577.0], [97.8, 577.0], [97.9, 577.0], [98.0, 602.0], [98.1, 602.0], [98.2, 602.0], [98.3, 602.0], [98.4, 602.0], [98.5, 602.0], [98.6, 602.0], [98.7, 602.0], [98.8, 602.0], [98.9, 602.0], [99.0, 783.0], [99.1, 783.0], [99.2, 783.0], [99.3, 783.0], [99.4, 783.0], [99.5, 783.0], [99.6, 783.0], [99.7, 783.0], [99.8, 783.0], [99.9, 783.0]], "isOverall": false, "label": "get api by commit", "isController": false}, {"data": [[0.0, 20.0], [0.1, 20.0], [0.2, 20.0], [0.3, 20.0], [0.4, 20.0], [0.5, 20.0], [0.6, 20.0], [0.7, 20.0], [0.8, 20.0], [0.9, 20.0], [1.0, 22.0], [1.1, 22.0], [1.2, 22.0], [1.3, 22.0], [1.4, 22.0], [1.5, 22.0], [1.6, 22.0], [1.7, 22.0], [1.8, 22.0], [1.9, 22.0], [2.0, 22.0], [2.1, 22.0], [2.2, 22.0], [2.3, 22.0], [2.4, 22.0], [2.5, 22.0], [2.6, 22.0], [2.7, 22.0], [2.8, 22.0], [2.9, 22.0], [3.0, 25.0], [3.1, 25.0], [3.2, 25.0], [3.3, 25.0], [3.4, 25.0], [3.5, 25.0], [3.6, 25.0], [3.7, 25.0], [3.8, 25.0], [3.9, 25.0], [4.0, 28.0], [4.1, 28.0], [4.2, 28.0], [4.3, 28.0], [4.4, 28.0], [4.5, 28.0], [4.6, 28.0], [4.7, 28.0], [4.8, 28.0], [4.9, 28.0], [5.0, 29.0], [5.1, 29.0], [5.2, 29.0], [5.3, 29.0], [5.4, 29.0], [5.5, 29.0], [5.6, 29.0], [5.7, 29.0], [5.8, 29.0], [5.9, 29.0], [6.0, 34.0], [6.1, 34.0], [6.2, 34.0], [6.3, 34.0], [6.4, 34.0], [6.5, 34.0], [6.6, 34.0], [6.7, 34.0], [6.8, 34.0], [6.9, 34.0], [7.0, 34.0], [7.1, 34.0], [7.2, 34.0], [7.3, 34.0], [7.4, 34.0], [7.5, 34.0], [7.6, 34.0], [7.7, 34.0], [7.8, 34.0], [7.9, 34.0], [8.0, 36.0], [8.1, 36.0], [8.2, 36.0], [8.3, 36.0], [8.4, 36.0], [8.5, 36.0], [8.6, 36.0], [8.7, 36.0], [8.8, 36.0], [8.9, 36.0], [9.0, 39.0], [9.1, 39.0], [9.2, 39.0], [9.3, 39.0], [9.4, 39.0], [9.5, 39.0], [9.6, 39.0], [9.7, 39.0], [9.8, 39.0], [9.9, 39.0], [10.0, 411.0], [10.1, 411.0], [10.2, 411.0], [10.3, 411.0], [10.4, 411.0], [10.5, 411.0], [10.6, 411.0], [10.7, 411.0], [10.8, 411.0], [10.9, 411.0], [11.0, 455.0], [11.1, 455.0], [11.2, 455.0], [11.3, 455.0], [11.4, 455.0], [11.5, 455.0], [11.6, 455.0], [11.7, 455.0], [11.8, 455.0], [11.9, 455.0], [12.0, 469.0], [12.1, 469.0], [12.2, 469.0], [12.3, 469.0], [12.4, 469.0], [12.5, 469.0], [12.6, 469.0], [12.7, 469.0], [12.8, 469.0], [12.9, 469.0], [13.0, 506.0], [13.1, 506.0], [13.2, 506.0], [13.3, 506.0], [13.4, 506.0], [13.5, 506.0], [13.6, 506.0], [13.7, 506.0], [13.8, 506.0], [13.9, 506.0], [14.0, 530.0], [14.1, 530.0], [14.2, 530.0], [14.3, 530.0], [14.4, 530.0], [14.5, 530.0], [14.6, 530.0], [14.7, 530.0], [14.8, 530.0], [14.9, 530.0], [15.0, 601.0], [15.1, 601.0], [15.2, 601.0], [15.3, 601.0], [15.4, 601.0], [15.5, 601.0], [15.6, 601.0], [15.7, 601.0], [15.8, 601.0], [15.9, 601.0], [16.0, 717.0], [16.1, 717.0], [16.2, 717.0], [16.3, 717.0], [16.4, 717.0], [16.5, 717.0], [16.6, 717.0], [16.7, 717.0], [16.8, 717.0], [16.9, 717.0], [17.0, 732.0], [17.1, 732.0], [17.2, 732.0], [17.3, 732.0], [17.4, 732.0], [17.5, 732.0], [17.6, 732.0], [17.7, 732.0], [17.8, 732.0], [17.9, 732.0], [18.0, 743.0], [18.1, 743.0], [18.2, 743.0], [18.3, 743.0], [18.4, 743.0], [18.5, 743.0], [18.6, 743.0], [18.7, 743.0], [18.8, 743.0], [18.9, 743.0], [19.0, 833.0], [19.1, 833.0], [19.2, 833.0], [19.3, 833.0], [19.4, 833.0], [19.5, 833.0], [19.6, 833.0], [19.7, 833.0], [19.8, 833.0], [19.9, 833.0], [20.0, 881.0], [20.1, 881.0], [20.2, 881.0], [20.3, 881.0], [20.4, 881.0], [20.5, 881.0], [20.6, 881.0], [20.7, 881.0], [20.8, 881.0], [20.9, 881.0], [21.0, 928.0], [21.1, 928.0], [21.2, 928.0], [21.3, 928.0], [21.4, 928.0], [21.5, 928.0], [21.6, 928.0], [21.7, 928.0], [21.8, 928.0], [21.9, 928.0], [22.0, 1006.0], [22.1, 1006.0], [22.2, 1006.0], [22.3, 1006.0], [22.4, 1006.0], [22.5, 1006.0], [22.6, 1006.0], [22.7, 1006.0], [22.8, 1006.0], [22.9, 1006.0], [23.0, 1030.0], [23.1, 1030.0], [23.2, 1030.0], [23.3, 1030.0], [23.4, 1030.0], [23.5, 1030.0], [23.6, 1030.0], [23.7, 1030.0], [23.8, 1030.0], [23.9, 1030.0], [24.0, 1046.0], [24.1, 1046.0], [24.2, 1046.0], [24.3, 1046.0], [24.4, 1046.0], [24.5, 1046.0], [24.6, 1046.0], [24.7, 1046.0], [24.8, 1046.0], [24.9, 1046.0], [25.0, 1096.0], [25.1, 1096.0], [25.2, 1096.0], [25.3, 1096.0], [25.4, 1096.0], [25.5, 1096.0], [25.6, 1096.0], [25.7, 1096.0], [25.8, 1096.0], [25.9, 1096.0], [26.0, 1197.0], [26.1, 1197.0], [26.2, 1197.0], [26.3, 1197.0], [26.4, 1197.0], [26.5, 1197.0], [26.6, 1197.0], [26.7, 1197.0], [26.8, 1197.0], [26.9, 1197.0], [27.0, 1221.0], [27.1, 1221.0], [27.2, 1221.0], [27.3, 1221.0], [27.4, 1221.0], [27.5, 1221.0], [27.6, 1221.0], [27.7, 1221.0], [27.8, 1221.0], [27.9, 1221.0], [28.0, 1232.0], [28.1, 1232.0], [28.2, 1232.0], [28.3, 1232.0], [28.4, 1232.0], [28.5, 1232.0], [28.6, 1232.0], [28.7, 1232.0], [28.8, 1232.0], [28.9, 1232.0], [29.0, 1293.0], [29.1, 1293.0], [29.2, 1293.0], [29.3, 1293.0], [29.4, 1293.0], [29.5, 1293.0], [29.6, 1293.0], [29.7, 1293.0], [29.8, 1293.0], [29.9, 1293.0], [30.0, 1330.0], [30.1, 1330.0], [30.2, 1330.0], [30.3, 1330.0], [30.4, 1330.0], [30.5, 1330.0], [30.6, 1330.0], [30.7, 1330.0], [30.8, 1330.0], [30.9, 1330.0], [31.0, 1343.0], [31.1, 1343.0], [31.2, 1343.0], [31.3, 1343.0], [31.4, 1343.0], [31.5, 1343.0], [31.6, 1343.0], [31.7, 1343.0], [31.8, 1343.0], [31.9, 1343.0], [32.0, 1371.0], [32.1, 1371.0], [32.2, 1371.0], [32.3, 1371.0], [32.4, 1371.0], [32.5, 1371.0], [32.6, 1371.0], [32.7, 1371.0], [32.8, 1371.0], [32.9, 1371.0], [33.0, 1386.0], [33.1, 1386.0], [33.2, 1386.0], [33.3, 1386.0], [33.4, 1386.0], [33.5, 1386.0], [33.6, 1386.0], [33.7, 1386.0], [33.8, 1386.0], [33.9, 1386.0], [34.0, 1413.0], [34.1, 1413.0], [34.2, 1413.0], [34.3, 1413.0], [34.4, 1413.0], [34.5, 1413.0], [34.6, 1413.0], [34.7, 1413.0], [34.8, 1413.0], [34.9, 1413.0], [35.0, 1422.0], [35.1, 1422.0], [35.2, 1422.0], [35.3, 1422.0], [35.4, 1422.0], [35.5, 1422.0], [35.6, 1422.0], [35.7, 1422.0], [35.8, 1422.0], [35.9, 1422.0], [36.0, 1570.0], [36.1, 1570.0], [36.2, 1570.0], [36.3, 1570.0], [36.4, 1570.0], [36.5, 1570.0], [36.6, 1570.0], [36.7, 1570.0], [36.8, 1570.0], [36.9, 1570.0], [37.0, 1637.0], [37.1, 1637.0], [37.2, 1637.0], [37.3, 1637.0], [37.4, 1637.0], [37.5, 1637.0], [37.6, 1637.0], [37.7, 1637.0], [37.8, 1637.0], [37.9, 1637.0], [38.0, 1638.0], [38.1, 1638.0], [38.2, 1638.0], [38.3, 1638.0], [38.4, 1638.0], [38.5, 1638.0], [38.6, 1638.0], [38.7, 1638.0], [38.8, 1638.0], [38.9, 1638.0], [39.0, 1676.0], [39.1, 1676.0], [39.2, 1676.0], [39.3, 1676.0], [39.4, 1676.0], [39.5, 1676.0], [39.6, 1676.0], [39.7, 1676.0], [39.8, 1676.0], [39.9, 1676.0], [40.0, 1735.0], [40.1, 1735.0], [40.2, 1735.0], [40.3, 1735.0], [40.4, 1735.0], [40.5, 1735.0], [40.6, 1735.0], [40.7, 1735.0], [40.8, 1735.0], [40.9, 1735.0], [41.0, 1772.0], [41.1, 1772.0], [41.2, 1772.0], [41.3, 1772.0], [41.4, 1772.0], [41.5, 1772.0], [41.6, 1772.0], [41.7, 1772.0], [41.8, 1772.0], [41.9, 1772.0], [42.0, 1797.0], [42.1, 1797.0], [42.2, 1797.0], [42.3, 1797.0], [42.4, 1797.0], [42.5, 1797.0], [42.6, 1797.0], [42.7, 1797.0], [42.8, 1797.0], [42.9, 1797.0], [43.0, 1841.0], [43.1, 1841.0], [43.2, 1841.0], [43.3, 1841.0], [43.4, 1841.0], [43.5, 1841.0], [43.6, 1841.0], [43.7, 1841.0], [43.8, 1841.0], [43.9, 1841.0], [44.0, 1963.0], [44.1, 1963.0], [44.2, 1963.0], [44.3, 1963.0], [44.4, 1963.0], [44.5, 1963.0], [44.6, 1963.0], [44.7, 1963.0], [44.8, 1963.0], [44.9, 1963.0], [45.0, 1965.0], [45.1, 1965.0], [45.2, 1965.0], [45.3, 1965.0], [45.4, 1965.0], [45.5, 1965.0], [45.6, 1965.0], [45.7, 1965.0], [45.8, 1965.0], [45.9, 1965.0], [46.0, 2106.0], [46.1, 2106.0], [46.2, 2106.0], [46.3, 2106.0], [46.4, 2106.0], [46.5, 2106.0], [46.6, 2106.0], [46.7, 2106.0], [46.8, 2106.0], [46.9, 2106.0], [47.0, 2135.0], [47.1, 2135.0], [47.2, 2135.0], [47.3, 2135.0], [47.4, 2135.0], [47.5, 2135.0], [47.6, 2135.0], [47.7, 2135.0], [47.8, 2135.0], [47.9, 2135.0], [48.0, 2205.0], [48.1, 2205.0], [48.2, 2205.0], [48.3, 2205.0], [48.4, 2205.0], [48.5, 2205.0], [48.6, 2205.0], [48.7, 2205.0], [48.8, 2205.0], [48.9, 2205.0], [49.0, 2208.0], [49.1, 2208.0], [49.2, 2208.0], [49.3, 2208.0], [49.4, 2208.0], [49.5, 2208.0], [49.6, 2208.0], [49.7, 2208.0], [49.8, 2208.0], [49.9, 2208.0], [50.0, 2223.0], [50.1, 2223.0], [50.2, 2223.0], [50.3, 2223.0], [50.4, 2223.0], [50.5, 2223.0], [50.6, 2223.0], [50.7, 2223.0], [50.8, 2223.0], [50.9, 2223.0], [51.0, 2270.0], [51.1, 2270.0], [51.2, 2270.0], [51.3, 2270.0], [51.4, 2270.0], [51.5, 2270.0], [51.6, 2270.0], [51.7, 2270.0], [51.8, 2270.0], [51.9, 2270.0], [52.0, 2278.0], [52.1, 2278.0], [52.2, 2278.0], [52.3, 2278.0], [52.4, 2278.0], [52.5, 2278.0], [52.6, 2278.0], [52.7, 2278.0], [52.8, 2278.0], [52.9, 2278.0], [53.0, 2290.0], [53.1, 2290.0], [53.2, 2290.0], [53.3, 2290.0], [53.4, 2290.0], [53.5, 2290.0], [53.6, 2290.0], [53.7, 2290.0], [53.8, 2290.0], [53.9, 2290.0], [54.0, 2321.0], [54.1, 2321.0], [54.2, 2321.0], [54.3, 2321.0], [54.4, 2321.0], [54.5, 2321.0], [54.6, 2321.0], [54.7, 2321.0], [54.8, 2321.0], [54.9, 2321.0], [55.0, 2373.0], [55.1, 2373.0], [55.2, 2373.0], [55.3, 2373.0], [55.4, 2373.0], [55.5, 2373.0], [55.6, 2373.0], [55.7, 2373.0], [55.8, 2373.0], [55.9, 2373.0], [56.0, 2390.0], [56.1, 2390.0], [56.2, 2390.0], [56.3, 2390.0], [56.4, 2390.0], [56.5, 2390.0], [56.6, 2390.0], [56.7, 2390.0], [56.8, 2390.0], [56.9, 2390.0], [57.0, 2409.0], [57.1, 2409.0], [57.2, 2409.0], [57.3, 2409.0], [57.4, 2409.0], [57.5, 2409.0], [57.6, 2409.0], [57.7, 2409.0], [57.8, 2409.0], [57.9, 2409.0], [58.0, 2489.0], [58.1, 2489.0], [58.2, 2489.0], [58.3, 2489.0], [58.4, 2489.0], [58.5, 2489.0], [58.6, 2489.0], [58.7, 2489.0], [58.8, 2489.0], [58.9, 2489.0], [59.0, 2524.0], [59.1, 2524.0], [59.2, 2524.0], [59.3, 2524.0], [59.4, 2524.0], [59.5, 2524.0], [59.6, 2524.0], [59.7, 2524.0], [59.8, 2524.0], [59.9, 2524.0], [60.0, 2542.0], [60.1, 2542.0], [60.2, 2542.0], [60.3, 2542.0], [60.4, 2542.0], [60.5, 2542.0], [60.6, 2542.0], [60.7, 2542.0], [60.8, 2542.0], [60.9, 2542.0], [61.0, 2554.0], [61.1, 2554.0], [61.2, 2554.0], [61.3, 2554.0], [61.4, 2554.0], [61.5, 2554.0], [61.6, 2554.0], [61.7, 2554.0], [61.8, 2554.0], [61.9, 2554.0], [62.0, 2619.0], [62.1, 2619.0], [62.2, 2619.0], [62.3, 2619.0], [62.4, 2619.0], [62.5, 2619.0], [62.6, 2619.0], [62.7, 2619.0], [62.8, 2619.0], [62.9, 2619.0], [63.0, 2687.0], [63.1, 2687.0], [63.2, 2687.0], [63.3, 2687.0], [63.4, 2687.0], [63.5, 2687.0], [63.6, 2687.0], [63.7, 2687.0], [63.8, 2687.0], [63.9, 2687.0], [64.0, 2692.0], [64.1, 2692.0], [64.2, 2692.0], [64.3, 2692.0], [64.4, 2692.0], [64.5, 2692.0], [64.6, 2692.0], [64.7, 2692.0], [64.8, 2692.0], [64.9, 2692.0], [65.0, 2702.0], [65.1, 2702.0], [65.2, 2702.0], [65.3, 2702.0], [65.4, 2702.0], [65.5, 2702.0], [65.6, 2702.0], [65.7, 2702.0], [65.8, 2702.0], [65.9, 2702.0], [66.0, 2703.0], [66.1, 2703.0], [66.2, 2703.0], [66.3, 2703.0], [66.4, 2703.0], [66.5, 2703.0], [66.6, 2703.0], [66.7, 2703.0], [66.8, 2703.0], [66.9, 2703.0], [67.0, 2769.0], [67.1, 2769.0], [67.2, 2769.0], [67.3, 2769.0], [67.4, 2769.0], [67.5, 2769.0], [67.6, 2769.0], [67.7, 2769.0], [67.8, 2769.0], [67.9, 2769.0], [68.0, 2786.0], [68.1, 2786.0], [68.2, 2786.0], [68.3, 2786.0], [68.4, 2786.0], [68.5, 2786.0], [68.6, 2786.0], [68.7, 2786.0], [68.8, 2786.0], [68.9, 2786.0], [69.0, 2896.0], [69.1, 2896.0], [69.2, 2896.0], [69.3, 2896.0], [69.4, 2896.0], [69.5, 2896.0], [69.6, 2896.0], [69.7, 2896.0], [69.8, 2896.0], [69.9, 2896.0], [70.0, 2980.0], [70.1, 2980.0], [70.2, 2980.0], [70.3, 2980.0], [70.4, 2980.0], [70.5, 2980.0], [70.6, 2980.0], [70.7, 2980.0], [70.8, 2980.0], [70.9, 2980.0], [71.0, 3067.0], [71.1, 3067.0], [71.2, 3067.0], [71.3, 3067.0], [71.4, 3067.0], [71.5, 3067.0], [71.6, 3067.0], [71.7, 3067.0], [71.8, 3067.0], [71.9, 3067.0], [72.0, 3069.0], [72.1, 3069.0], [72.2, 3069.0], [72.3, 3069.0], [72.4, 3069.0], [72.5, 3069.0], [72.6, 3069.0], [72.7, 3069.0], [72.8, 3069.0], [72.9, 3069.0], [73.0, 3108.0], [73.1, 3108.0], [73.2, 3108.0], [73.3, 3108.0], [73.4, 3108.0], [73.5, 3108.0], [73.6, 3108.0], [73.7, 3108.0], [73.8, 3108.0], [73.9, 3108.0], [74.0, 3242.0], [74.1, 3242.0], [74.2, 3242.0], [74.3, 3242.0], [74.4, 3242.0], [74.5, 3242.0], [74.6, 3242.0], [74.7, 3242.0], [74.8, 3242.0], [74.9, 3242.0], [75.0, 3375.0], [75.1, 3375.0], [75.2, 3375.0], [75.3, 3375.0], [75.4, 3375.0], [75.5, 3375.0], [75.6, 3375.0], [75.7, 3375.0], [75.8, 3375.0], [75.9, 3375.0], [76.0, 3393.0], [76.1, 3393.0], [76.2, 3393.0], [76.3, 3393.0], [76.4, 3393.0], [76.5, 3393.0], [76.6, 3393.0], [76.7, 3393.0], [76.8, 3393.0], [76.9, 3393.0], [77.0, 3442.0], [77.1, 3442.0], [77.2, 3442.0], [77.3, 3442.0], [77.4, 3442.0], [77.5, 3442.0], [77.6, 3442.0], [77.7, 3442.0], [77.8, 3442.0], [77.9, 3442.0], [78.0, 3486.0], [78.1, 3486.0], [78.2, 3486.0], [78.3, 3486.0], [78.4, 3486.0], [78.5, 3486.0], [78.6, 3486.0], [78.7, 3486.0], [78.8, 3486.0], [78.9, 3486.0], [79.0, 3494.0], [79.1, 3494.0], [79.2, 3494.0], [79.3, 3494.0], [79.4, 3494.0], [79.5, 3494.0], [79.6, 3494.0], [79.7, 3494.0], [79.8, 3494.0], [79.9, 3494.0], [80.0, 3569.0], [80.1, 3569.0], [80.2, 3569.0], [80.3, 3569.0], [80.4, 3569.0], [80.5, 3569.0], [80.6, 3569.0], [80.7, 3569.0], [80.8, 3569.0], [80.9, 3569.0], [81.0, 3577.0], [81.1, 3577.0], [81.2, 3577.0], [81.3, 3577.0], [81.4, 3577.0], [81.5, 3577.0], [81.6, 3577.0], [81.7, 3577.0], [81.8, 3577.0], [81.9, 3577.0], [82.0, 3583.0], [82.1, 3583.0], [82.2, 3583.0], [82.3, 3583.0], [82.4, 3583.0], [82.5, 3583.0], [82.6, 3583.0], [82.7, 3583.0], [82.8, 3583.0], [82.9, 3583.0], [83.0, 3588.0], [83.1, 3588.0], [83.2, 3588.0], [83.3, 3588.0], [83.4, 3588.0], [83.5, 3588.0], [83.6, 3588.0], [83.7, 3588.0], [83.8, 3588.0], [83.9, 3588.0], [84.0, 3605.0], [84.1, 3605.0], [84.2, 3605.0], [84.3, 3605.0], [84.4, 3605.0], [84.5, 3605.0], [84.6, 3605.0], [84.7, 3605.0], [84.8, 3605.0], [84.9, 3605.0], [85.0, 3615.0], [85.1, 3615.0], [85.2, 3615.0], [85.3, 3615.0], [85.4, 3615.0], [85.5, 3615.0], [85.6, 3615.0], [85.7, 3615.0], [85.8, 3615.0], [85.9, 3615.0], [86.0, 3617.0], [86.1, 3617.0], [86.2, 3617.0], [86.3, 3617.0], [86.4, 3617.0], [86.5, 3617.0], [86.6, 3617.0], [86.7, 3617.0], [86.8, 3617.0], [86.9, 3617.0], [87.0, 3711.0], [87.1, 3711.0], [87.2, 3711.0], [87.3, 3711.0], [87.4, 3711.0], [87.5, 3711.0], [87.6, 3711.0], [87.7, 3711.0], [87.8, 3711.0], [87.9, 3711.0], [88.0, 3719.0], [88.1, 3719.0], [88.2, 3719.0], [88.3, 3719.0], [88.4, 3719.0], [88.5, 3719.0], [88.6, 3719.0], [88.7, 3719.0], [88.8, 3719.0], [88.9, 3719.0], [89.0, 3721.0], [89.1, 3721.0], [89.2, 3721.0], [89.3, 3721.0], [89.4, 3721.0], [89.5, 3721.0], [89.6, 3721.0], [89.7, 3721.0], [89.8, 3721.0], [89.9, 3721.0], [90.0, 3726.0], [90.1, 3726.0], [90.2, 3726.0], [90.3, 3726.0], [90.4, 3726.0], [90.5, 3726.0], [90.6, 3726.0], [90.7, 3726.0], [90.8, 3726.0], [90.9, 3726.0], [91.0, 3731.0], [91.1, 3731.0], [91.2, 3731.0], [91.3, 3731.0], [91.4, 3731.0], [91.5, 3731.0], [91.6, 3731.0], [91.7, 3731.0], [91.8, 3731.0], [91.9, 3731.0], [92.0, 3834.0], [92.1, 3834.0], [92.2, 3834.0], [92.3, 3834.0], [92.4, 3834.0], [92.5, 3834.0], [92.6, 3834.0], [92.7, 3834.0], [92.8, 3834.0], [92.9, 3834.0], [93.0, 3887.0], [93.1, 3887.0], [93.2, 3887.0], [93.3, 3887.0], [93.4, 3887.0], [93.5, 3887.0], [93.6, 3887.0], [93.7, 3887.0], [93.8, 3887.0], [93.9, 3887.0], [94.0, 3916.0], [94.1, 3916.0], [94.2, 3916.0], [94.3, 3916.0], [94.4, 3916.0], [94.5, 3916.0], [94.6, 3916.0], [94.7, 3916.0], [94.8, 3916.0], [94.9, 3916.0], [95.0, 3996.0], [95.1, 3996.0], [95.2, 3996.0], [95.3, 3996.0], [95.4, 3996.0], [95.5, 3996.0], [95.6, 3996.0], [95.7, 3996.0], [95.8, 3996.0], [95.9, 3996.0], [96.0, 4020.0], [96.1, 4020.0], [96.2, 4020.0], [96.3, 4020.0], [96.4, 4020.0], [96.5, 4020.0], [96.6, 4020.0], [96.7, 4020.0], [96.8, 4020.0], [96.9, 4020.0], [97.0, 4055.0], [97.1, 4055.0], [97.2, 4055.0], [97.3, 4055.0], [97.4, 4055.0], [97.5, 4055.0], [97.6, 4055.0], [97.7, 4055.0], [97.8, 4055.0], [97.9, 4055.0], [98.0, 4060.0], [98.1, 4060.0], [98.2, 4060.0], [98.3, 4060.0], [98.4, 4060.0], [98.5, 4060.0], [98.6, 4060.0], [98.7, 4060.0], [98.8, 4060.0], [98.9, 4060.0], [99.0, 4104.0], [99.1, 4104.0], [99.2, 4104.0], [99.3, 4104.0], [99.4, 4104.0], [99.5, 4104.0], [99.6, 4104.0], [99.7, 4104.0], [99.8, 4104.0], [99.9, 4104.0]], "isOverall": false, "label": "get api", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 58.0, "series": [{"data": [[8300.0, 3.0], [8200.0, 1.0], [8500.0, 1.0], [8600.0, 2.0], [8800.0, 1.0], [9100.0, 1.0], [9500.0, 1.0], [9400.0, 1.0], [9800.0, 3.0], [4300.0, 1.0], [4600.0, 4.0], [4500.0, 1.0], [4700.0, 5.0], [4800.0, 1.0], [5000.0, 2.0], [4900.0, 1.0], [5100.0, 3.0], [5200.0, 1.0], [5300.0, 2.0], [5400.0, 3.0], [5500.0, 1.0], [5600.0, 4.0], [5700.0, 4.0], [5800.0, 6.0], [5900.0, 1.0], [6000.0, 5.0], [6100.0, 4.0], [6200.0, 2.0], [6300.0, 3.0], [6400.0, 2.0], [6500.0, 1.0], [6600.0, 2.0], [6800.0, 3.0], [6900.0, 2.0], [6700.0, 1.0], [7000.0, 2.0], [7100.0, 2.0], [7400.0, 3.0], [7300.0, 2.0], [7500.0, 3.0], [7800.0, 3.0], [7700.0, 1.0], [7900.0, 3.0], [8100.0, 1.0], [8000.0, 1.0]], "isOverall": false, "label": "authenticate", "isController": false}, {"data": [[0.0, 30.0], [2200.0, 1.0], [600.0, 4.0], [700.0, 3.0], [3200.0, 2.0], [800.0, 1.0], [200.0, 3.0], [3600.0, 1.0], [900.0, 1.0], [1000.0, 1.0], [1100.0, 1.0], [300.0, 22.0], [1200.0, 2.0], [400.0, 15.0], [100.0, 4.0], [500.0, 9.0]], "isOverall": false, "label": "get actions", "isController": false}, {"data": [[0.0, 58.0], [300.0, 13.0], [600.0, 1.0], [700.0, 1.0], [400.0, 6.0], [200.0, 6.0], [100.0, 14.0], [500.0, 1.0]], "isOverall": false, "label": "get api by commit", "isController": false}, {"data": [[0.0, 10.0], [600.0, 1.0], [700.0, 3.0], [800.0, 2.0], [900.0, 1.0], [1000.0, 4.0], [1100.0, 1.0], [1200.0, 3.0], [1300.0, 4.0], [1400.0, 2.0], [1500.0, 1.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 1.0], [1900.0, 2.0], [2100.0, 2.0], [2200.0, 6.0], [2300.0, 3.0], [2400.0, 2.0], [2500.0, 3.0], [2600.0, 3.0], [2800.0, 1.0], [2700.0, 4.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 1.0], [3300.0, 2.0], [3200.0, 1.0], [3400.0, 3.0], [3500.0, 4.0], [3700.0, 5.0], [3600.0, 3.0], [3800.0, 2.0], [3900.0, 2.0], [4000.0, 3.0], [4100.0, 1.0], [400.0, 3.0], [500.0, 2.0]], "isOverall": false, "label": "get api", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 48.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 184.0, "series": [{"data": [[0.0, 184.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 48.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 168.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 74.74250000000004, "minX": 1.66232022E12, "maxY": 74.74250000000004, "series": [{"data": [[1.66232022E12, 74.74250000000004]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66232022E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.0, "maxY": 9838.0, "series": [{"data": [[66.0, 9192.0], [4.0, 9835.0], [2.0, 9413.0], [19.0, 9838.0], [5.0, 9743.0], [98.0, 8561.666666666666], [100.0, 6303.384615384614]], "isOverall": false, "label": "authenticate", "isController": false}, {"data": [[94.95, 6570.569999999999]], "isOverall": false, "label": "authenticate-Aggregated", "isController": false}, {"data": [[32.0, 423.25], [2.0, 17.0], [38.0, 446.0], [41.0, 688.0], [47.0, 24.0], [46.0, 272.0], [49.0, 376.0], [52.0, 397.0], [55.0, 334.0], [56.0, 603.5], [59.0, 45.0], [58.0, 267.0], [63.0, 718.0], [62.0, 657.0], [67.0, 566.5], [64.0, 313.0], [4.0, 23.5], [71.0, 401.16666666666663], [70.0, 421.2], [69.0, 22.0], [74.0, 362.6666666666667], [72.0, 365.0], [77.0, 373.0], [76.0, 373.0], [83.0, 398.0], [82.0, 23.0], [81.0, 409.0], [80.0, 301.75], [5.0, 15.0], [84.0, 413.0], [91.0, 513.6], [89.0, 404.75], [88.0, 470.0], [95.0, 19.0], [94.0, 17.0], [98.0, 474.8], [97.0, 22.0], [96.0, 185.66666666666666], [100.0, 2533.5], [13.0, 625.0], [1.0, 18.0], [21.0, 307.5], [22.0, 334.0], [24.0, 593.0], [25.0, 356.0], [30.0, 428.0]], "isOverall": false, "label": "get actions", "isController": false}, {"data": [[66.74999999999999, 450.81]], "isOverall": false, "label": "get actions-Aggregated", "isController": false}, {"data": [[2.0, 18.0], [3.0, 23.0], [4.0, 18.0], [5.0, 23.0], [6.0, 49.0], [7.0, 19.0], [8.0, 53.0], [9.0, 60.0], [10.0, 93.0], [11.0, 30.0], [13.0, 118.0], [14.0, 167.0], [15.0, 38.0], [16.0, 95.0], [17.0, 91.0], [19.0, 312.5], [21.0, 295.5], [22.0, 43.0], [24.0, 282.0], [25.0, 121.0], [28.0, 274.3333333333333], [29.0, 144.0], [30.0, 368.0], [31.0, 44.0], [32.0, 42.0], [34.0, 279.0], [37.0, 22.0], [36.0, 233.0], [39.0, 30.0], [38.0, 170.0], [41.0, 219.0], [40.0, 164.0], [43.0, 182.0], [42.0, 176.0], [45.0, 102.5], [47.0, 226.0], [46.0, 187.0], [49.0, 209.0], [48.0, 19.0], [51.0, 219.0], [53.0, 17.0], [52.0, 313.0], [55.0, 228.0], [54.0, 14.0], [57.0, 325.0], [56.0, 19.0], [59.0, 49.0], [61.0, 25.0], [60.0, 43.0], [63.0, 20.0], [62.0, 316.0], [67.0, 783.0], [66.0, 337.0], [65.0, 37.0], [64.0, 31.0], [71.0, 40.0], [70.0, 19.0], [69.0, 308.0], [68.0, 311.0], [75.0, 379.0], [74.0, 368.0], [73.0, 348.0], [72.0, 353.0], [79.0, 23.0], [78.0, 24.0], [77.0, 30.0], [76.0, 27.0], [83.0, 19.0], [82.0, 30.0], [81.0, 26.0], [80.0, 26.0], [87.0, 68.0], [85.0, 426.0], [84.0, 404.0], [91.0, 256.0], [89.0, 56.0], [88.0, 63.0], [95.0, 18.0], [94.0, 14.0], [93.0, 34.0], [92.0, 20.0], [99.0, 14.0], [98.0, 17.0], [97.0, 18.0], [96.0, 15.0], [100.0, 14.0], [1.0, 18.0]], "isOverall": false, "label": "get api by commit", "isController": false}, {"data": [[50.65999999999999, 144.54000000000005]], "isOverall": false, "label": "get api by commit-Aggregated", "isController": false}, {"data": [[2.0, 31.0], [43.0, 1343.0], [53.0, 2390.0], [52.0, 2542.0], [59.0, 3719.0], [60.0, 34.0], [63.0, 3711.0], [67.0, 881.0], [71.0, 1199.0], [74.0, 1819.5], [72.0, 1637.0], [77.0, 2272.0], [80.0, 2524.0], [5.0, 23.5], [86.0, 3583.0], [84.0, 1759.5], [91.0, 1291.6], [89.0, 462.0], [88.0, 3588.0], [94.0, 833.0], [92.0, 732.0], [98.0, 2441.1304347826085], [96.0, 1395.7058823529412], [6.0, 39.0], [100.0, 3182.96], [30.0, 743.0]], "isOverall": false, "label": "get api", "isController": false}, {"data": [[86.61000000000001, 2105.360000000001]], "isOverall": false, "label": "get api-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3428.3333333333335, "minX": 1.66232022E12, "maxY": 6071.666666666667, "series": [{"data": [[1.66232022E12, 6071.666666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66232022E12, 3428.3333333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66232022E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 144.54000000000005, "minX": 1.66232022E12, "maxY": 6570.569999999999, "series": [{"data": [[1.66232022E12, 6570.569999999999]], "isOverall": false, "label": "authenticate", "isController": false}, {"data": [[1.66232022E12, 450.81]], "isOverall": false, "label": "get actions", "isController": false}, {"data": [[1.66232022E12, 144.54000000000005]], "isOverall": false, "label": "get api by commit", "isController": false}, {"data": [[1.66232022E12, 2105.360000000001]], "isOverall": false, "label": "get api", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66232022E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 142.74999999999994, "minX": 1.66232022E12, "maxY": 6568.77, "series": [{"data": [[1.66232022E12, 6568.77]], "isOverall": false, "label": "authenticate", "isController": false}, {"data": [[1.66232022E12, 449.34999999999997]], "isOverall": false, "label": "get actions", "isController": false}, {"data": [[1.66232022E12, 142.74999999999994]], "isOverall": false, "label": "get api by commit", "isController": false}, {"data": [[1.66232022E12, 2103.9899999999993]], "isOverall": false, "label": "get api", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66232022E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66232022E12, "maxY": 19.14, "series": [{"data": [[1.66232022E12, 19.14]], "isOverall": false, "label": "authenticate", "isController": false}, {"data": [[1.66232022E12, 0.0]], "isOverall": false, "label": "get actions", "isController": false}, {"data": [[1.66232022E12, 0.0]], "isOverall": false, "label": "get api by commit", "isController": false}, {"data": [[1.66232022E12, 0.0]], "isOverall": false, "label": "get api", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66232022E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 14.0, "minX": 1.66232022E12, "maxY": 9887.0, "series": [{"data": [[1.66232022E12, 9887.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66232022E12, 6831.600000000003]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66232022E12, 9597.140000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66232022E12, 7863.7]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66232022E12, 14.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66232022E12, 633.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66232022E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 165.5, "minX": 22.0, "maxY": 6428.0, "series": [{"data": [[22.0, 6428.0], [23.0, 5806.0], [24.0, 5317.0], [203.0, 513.0], [104.0, 165.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 203.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 163.0, "minX": 22.0, "maxY": 6426.5, "series": [{"data": [[22.0, 6426.5], [23.0, 5805.0], [24.0, 5315.5], [203.0, 511.0], [104.0, 163.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 203.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.66232022E12, "maxY": 6.666666666666667, "series": [{"data": [[1.66232022E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66232022E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.66232022E12, "maxY": 6.666666666666667, "series": [{"data": [[1.66232022E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66232022E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.66232022E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.66232022E12, 1.6666666666666667]], "isOverall": false, "label": "authenticate-success", "isController": false}, {"data": [[1.66232022E12, 1.6666666666666667]], "isOverall": false, "label": "get api-success", "isController": false}, {"data": [[1.66232022E12, 1.6666666666666667]], "isOverall": false, "label": "get actions-success", "isController": false}, {"data": [[1.66232022E12, 1.6666666666666667]], "isOverall": false, "label": "get api by commit-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66232022E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.66232022E12, "maxY": 6.666666666666667, "series": [{"data": [[1.66232022E12, 6.666666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66232022E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

